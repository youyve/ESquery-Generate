[
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"title\": {\n              \"query\": \"与大模型工具学习相关论文\",\n              \"fuzziness\": \"AUTO\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"abstract\": {\n              \"query\": \"与大模型工具学习相关论文\",\n              \"fuzziness\": \"AUTO\"\n            }\n          }\n        }\n      ]\n    }\n  },\n  \"size\": 10\n}\n```",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"author.keyword\": {\n              \"query\": \"大模型\",\n              \"operator\": \"and\"\n            }\n          }\n        },\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"now-1y\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "```json\nGET /my_index/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"title\": \"large model\"\n          }\n        },\n        {\n          \"match\": {\n            \"author\": \"agent\"\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "```json\nGET /my_index/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"date\": {\n              \"query\": \"last year\",\n              \"boost\": 2.0\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"author\": {\n              \"query\": \"model inference acceleration\",\n              \"boost\": 1.5\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"title\": {\n              \"query\": \"related papers\",\n              \"boost\": 1.2\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"abstract\": {\n              \"query\": \"model inference acceleration\",\n              \"boost\": 1.0\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\nThis ES query searches for documents that contain the terms \"last year\" in the `date` field, \"model inference acceleration\" in the `author`, `title`, or `abstract` fields, and \"related papers\" in any of these fields. The query is boosted using the `boost` parameter to give more weight to the matching documents that contain the specific terms.",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"abstract.content\": {\n              \"query\": \"指令微调细节描述\"\n            }\n          }\n        }\n      ],\n      \"should\": [\n        {\n          \"match\": {\n            \"title.content\": {\n              \"query\": \"指令微调细节描述\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"author.name\": {\n              \"query\": \"指令微调细节描述\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"date.content\": {\n              \"query\": \"指令微调细节描述\"\n            }\n          }\n        }\n      ],\n      \"minimum_should_match\": 1\n    }\n  }\n}\n```",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"author\": \"OCR文本检测最新进展\"\n          }\n        },\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"now-30d/d\"\n            }\n          }\n        }\n      ],\n      \"should\": [\n        {\n          \"match\": {\n            \"title\": {\n              \"query\": \"OCR文本检测最新进展\",\n              \"boost\": 2\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"abstract\": {\n              \"query\": \"OCR文本检测最新进展\"\n            }\n          }\n        }\n      ],\n      \"minimum_should_match\": 1,\n      \"boost\": 1\n    }\n  },\n  \"size\": 10\n}\n```\nThis query uses the `bool` query to combine multiple conditions that should match in order for a document to be considered a match. The `must` clause includes two conditions: the author field must contain the string \"OCR文本检测最新进展\" and the date field must be within the last 30 days (as specified by the `now-30d/d` syntax).\n\nThe `should` clause includes two more conditions that should match: the title and abstract fields must contain the string \"OCR文本检测最新进展\". The `minimum_should_match` parameter ensures that at least one of the `should` clauses must match in order for a document to be considered a match.\n\nThe `boost` parameter is used to boost the relevance score of documents that match all of the conditions in the `must` clause, as well as at least one of the conditions in the `should` clause. The `size` parameter is used to limit the number of documents returned in the response.",
    "```json\nGET /index/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"match\": {\n            \"title\": {\n              \"query\": \"OCR文本识别最新进展\",\n              \"operator\": \"and\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"abstract\": {\n              \"query\": \"OCR文本识别最新进展\",\n              \"operator\": \"and\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"author\": {\n              \"query\": \"OCR文本识别最新进展\",\n              \"operator\": \"and\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\nThis query uses the `match` query to search for documents where the `title`, `abstract`, or `author` fields contain the word \"OCR文本识别最新进展\". The `should` clause is used to indicate that any of these fields can match, and the `and` operator is used to require that all words in the query are present in the searched field.\n\nThe `match` query is a simple query that matches documents based on the presence of a term in a provided field. The `match_phrase` query is similar to the `match` query, but it allows for matching of phrases instead of individual terms.\n\nThe `bool` query is used to define a set of filtering conditions for the search results. In this case, we are using the `should` clause to indicate that any of the three fields (`title`, `abstract`, or `author`) can match the query. The `must` clause could be used instead to require that all three fields match the query.\n\nThe `operator` field is used to specify the boolean operator to use when combining the search terms in the `query` field with other filters. In this case, we are using the `and` operator to require that all words in the query must be present in the searched field. If you wanted to allow for the possibility of only one or two fields matching, you could use the `or` operator instead.",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"author\": {\n              \"query\": \"agent系列\",\n              \"fuzziness\": 1,\n              \"prefix_length\": 0\n            }\n          }\n        },\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"now-3M/M\",\n              \"lte\": \"now\"\n            }\n          }\n        }\n      ]\n    }\n  },\n  \"sort\": [\n    {\n      \"date\": {\n        \"order\": \"desc\"\n      }\n    }\n  ]\n}\n```",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"match\": {\n            \"title\": {\n              \"query\": \"多模态优化训练方式\",\n              \"fuzziness\": 1,\n              \"prefix_length\": 0,\n              \"max_expansions\": 50,\n              \"transpositions\": true,\n              \"lenient\": false,\n              \"zero_terms_query\": \"NONE\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"abstract\": {\n              \"query\": \"多模态优化训练方式\",\n              \"fuzziness\": 1,\n              \"prefix_length\": 0,\n              \"max_expansions\": 50,\n              \"transpositions\": true,\n              \"lenient\": false,\n              \"zero_terms_query\": \"NONE\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"author\": {\n              \"query\": \"多模态优化训练方式\",\n              \"fuzziness\": 1,\n              \"prefix_length\": 0,\n              \"max_expansions\": 50,\n              \"transpositions\": true,\n              \"lenient\": false,\n              \"zero_terms_query\": \"NONE\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"date\": {\n              \"query\": \"多模态优化训练方式\",\n              \"fuzziness\": 1,\n              \"prefix_length\": 0,\n              \"max_expansions\": 50,\n              \"transpositions\": true,\n              \"lenient\": false,\n              \"zero_terms_query\": \"NONE\"\n            }\n          }\n        }\n      ],\n      \"minimum_should_match\": 1,\n      \"boost\": 1\n    }\n  }\n}\n```\nThis search query uses the `bool` query type to combine multiple match queries for the fields `title`, `abstract`, `author`, and `date`. Each match query uses a fuzzy match (`\"fuzziness\": 1`) to allow for misspelled or abbreviated words in the search term. The `\"prefix_length\"` parameter is set to 0, which means that the entire input string should be matched as a prefix of the indexed field value. The `\"max_expansions\"` parameter is set to 50, which allows up to 50 expansions of the query if it matches more than one term. The `transpositions` parameter is set to `true`, which allows for transposition of terms in the input string and indexed field value during matching. The `\"zero_terms_query\"` parameter is set to \"NONE\", which means that if the search term does not match any documents, no documents will be returned.\n\nThe `\"should\"` clause specifies that at least one of the match queries should match, and the `minimum_should_match` parameter ensures that at least one match query must match for a document to be included in the result set. The `boost` parameter is set to 1, which means that all matched documents will have a default boost of 1.0.\n\nThis search query uses multiple terms from the user query and matches them against the indexed fields using fuzzy matching. The `should` clause allows for more flexible matching by allowing the query to match on any combination of the specified terms, rather than requiring an exact match on all terms. The `minimum_should_match` parameter ensures that at least one term must match in order for a document to be included in the result set.",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"title\": {\n              \"query\": \"大模型安全相关论文\",\n              \"operator\": \"and\"\n            }\n          }\n        },\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"now-1y\",\n              \"lte\": \"now\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\nThis query retrieves documents that contain the phrase \"大模型安全相关论文\" in their title field and have a date range between now and one year ago. The `must` clause is used to require both conditions to be met for a document to be included in the search results. The `range` query is used to filter documents by date, where the date field must fall within the specified range (now-1y to now). The `match` query is used to match the title field with the provided query.",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"match\": {\n            \"title\": {\n              \"query\": \"大模型推理的论文\",\n              \"operator\": \"and\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"abstract\": {\n              \"query\": \"大模型推理的论文\",\n              \"operator\": \"and\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"author.keyword\": {\n              \"query\": \"Natural language processing\",\n              \"operator\": \"and\"\n            }\n          }\n        },\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"now-30d/d\",\n              \"lte\": \"now/d\"\n            }\n          }\n        }\n      ],\n      \"should\": [\n        {\n          \"match\": {\n            \"title.keyword\": {\n              \"query\": \"Natural language processing\",\n              \"operator\": \"and\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"abstract.keyword\": {\n              \"query\": \"Natural language processing\",\n              \"operator\": \"and\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"language\": \"en\"\n          }\n        },\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"now-1d\"\n            }\n          }\n        }\n      ],\n      \"should\": [\n        {\n          \"multi_match\": {\n            \"query\": \"sentiment analysis\",\n            \"fields\": [\"title^2\", \"abstract\"]\n          }\n        },\n        {\n          \"nested\": {\n            \"path\": \"author\",\n            \"query\": {\n              \"bool\": {\n                \"must\": [\n                  {\n                    \"match_phrase\": {\n                      \"author.name\": \"sentiment analysis\"\n                    }\n                  }\n                ]\n              }\n            },\n            \"inner_hits\": {}\n          }\n        }\n      ],\n      \"minimum_should_match\": 1\n    }\n  }\n}\n```\nExplanation:\nThe query first matches documents that have a language field equal to \"en\" using the match query. Then, it filters out documents whose date field is more than one day old using the range query. After that, it searches for documents that contain the word \"sentiment analysis\" in either the title or abstract fields. Finally, it uses nested queries to search for author names containing the word \"sentiment analysis\". The minimum_should_match parameter ensures that at least one of these conditions must be met in order for a document to be included in the results.\n\nThe above query will return all the documents that have been written in English, are less than 24 hours old, contain the word \"sentiment analysis\" in either title or abstract fields and have an author with name containing the word \"sentiment analysis\".",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"2023-01-01\"\n            }\n          }\n        },\n        {\n          \"multi_match\": {\n            \"query\": \"NLP\",\n            \"fields\": [\n              \"author^2\",\n              \"title^5\",\n              \"abstract^3\"\n            ]\n          }\n        }\n      ],\n      \"filter\": [\n        {\n          \"term\": {\n            \"date_histogram\": {\n              \"field\": \"date\",\n              \"interval\": \"year\",\n              \"format\": \"yyyy-MM-dd\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"multi_match\": {\n            \"query\": \"大模型评测\",\n            \"fields\": [\"title^5\", \"abstract\"]\n          }\n        },\n        {\n          \"multi_match\": {\n            \"query\": \"大模型评估\",\n            \"fields\": [\"title^5\", \"abstract\"]\n          }\n        },\n        {\n          \"multi_match\": {\n            \"query\": \"模型评估\",\n            \"fields\": [\"title^5\", \"abstract\"]\n          }\n        },\n        {\n          \"multi_match\": {\n            \"query\": \"模型评测\",\n            \"fields\": [\"title^5\", \"abstract\"]\n          }\n        }\n      ]\n    }\n  },\n  \"sort\": [\n    {\n      \"date\": {\n        \"order\": \"desc\"\n      }\n    }\n  ]\n}\n```\nThis query uses a boolean query with the `should` clause to find documents that contain either of the four search terms: \"大模型评测\", \"大模型评估\", \"模型评估\", or \"模型评测\". The `multi_match` query is used to match the search terms against the `title`, `abstract`, and `content` fields.\n\nThe `sort` clause is used to sort the results by the `date` field in descending order, which means the most recent documents will be returned first.\n\nNote that this query uses a mix of exact and fuzzy matching, which can provide better recall rates than using only exact matching. However, it may also return some irrelevant or low-quality documents. You can adjust the `minimum_should_match` parameter in the `multi_match` query to control the level of fuzziness.",
    "```\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"title\": \"multimodal large model\"\n          }\n        },\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"now-30d/d\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\nThis query will match documents that have the word \"multimodal\" in their title and have a date within the last 30 days. The `range` filter is used to filter out documents that are older than 30 days, while the `match` query is used to match documents that contain the word \"large\" in their title.\n\nNote that this query uses the `date` field in the ES index to filter by date range, and it assumes that the `date` field is stored in ISO 8601 format (YYYY-MM-DDTHH:mm:ss.SSSZ) in the ES documents. If your date fields are not stored in this format, you may need to adjust the query accordingly.",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"now-6M\",\n              \"lte\": \"now\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"author\": \"tool\"\n          }\n        },\n        {\n          \"match\": {\n            \"title\": \"评测数据集\"\n          }\n        }\n      ]\n    }\n  },\n  \"sort\": [\n    \"_score\"\n  ],\n  \"size\": 10,\n  \"from\": 0\n}\n```",
    "```\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"match\": {\n            \"author\": {\n              \"query\": \"工具评测\",\n              \"operator\": \"and\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"title\": {\n              \"query\": \"工具评测\",\n              \"operator\": \"and\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"abstract\": {\n              \"query\": \"工具评测\",\n              \"operator\": \"and\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\nThis search query uses a bool query with should clauses to search for documents that contain the words \"工具评测\" in either the author, title, or abstract fields. The operator is set to \"and\", which means that all three words must be present in the document to match the query.\n\nThe use of the \"match\" query type allows for partial matching and the \"should\" clause allows for more flexible search results.",
    "```\nGET /_search\n{\n  \"query\": {\n    \"match\": {\n      \"title.english\": \"paper on models in game\"\n    }\n  }\n}\n```",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"multi_match\": {\n            \"query\": \"对比解码相关论文\",\n            \"fields\": [\"title^3\", \"abstract\"]\n          }\n        },\n        {\n          \"multi_match\": {\n            \"query\": \"对比解码相关论文\",\n            \"fields\": [\"author^2\", \"date\"],\n            \"operator\": \"and\"\n          }\n        }\n      ]\n    }\n  }\n}\n```\nThis ES query searches for the phrase \"对比解码相关论文\" in the \"title\" and \"abstract\" fields, with a boost of 3 to the title field. The second search criteria is also applied to the author and date fields, but with an operator of \"and\". This means that both the phrase must be found in the author and date fields, which increases the recall rate of the search.",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"title\": {\n              \"query\": \"influence of mitochondrial dysfunction on neurodegeneration\",\n              \"boost\": 1.5,\n              \"fuzziness\": 1\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"abstract\": {\n              \"query\": \"mitochondrial dysfunction\",\n              \"boost\": 2,\n              \"fuzziness\": 2\n            }\n          }\n        }\n      ],\n      \"should\": [\n        {\n          \"match\": {\n            \"author\": {\n              \"query\": \"John Smith\",\n              \"operator\": \"and\"\n            }\n          }\n        },\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"now-10y\",\n              \"lte\": \"now\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"match\": {\n            \"title\": {\n              \"query\": \"大模型在语义坍缩问题上的研究\",\n              \"operator\": \"and\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"abstract\": {\n              \"query\": \"大模型在语义坍缩问题上的研究\",\n              \"operator\": \"and\"\n            }\n          }\n        }\n      ],\n      \"minimum_should_match\": 1,\n      \"boost\": 1.0\n    }\n  },\n  \"size\": 10,\n  \"_source\": {\n    \"includes\": [\"author\", \"date\", \"title\", \"abstract\"]\n  }\n}\n```",
    "```\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"match\": {\n            \"title\": {\n              \"query\": \"evaluate\",\n              \"operator\": \"and\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"abstract\": {\n              \"query\": \"quality\",\n              \"operator\": \"and\"\n            }\n          }\n        }\n      ],\n      \"filter\": [\n        {\n          \"terms\": {\n            \"author\": [\n              \"machine\",\n              \"translation\"\n            ]\n          }\n        },\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"2010-01-01\",\n              \"lte\": \"2023-01-01\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\nThis ES search query uses the `bool` query type to combine multiple queries using boolean operators (`should`, `filter`). The first part of the query searches for documents where the `title` field contains the word \"evaluate\" and the `abstract` field contains the word \"quality\". These fields are analyzed by default, so the search will only return documents where these words appear in the analyzed form.\n\nThe second part of the query filters the results to include only documents where the `author` field contains either \"machine\" or \"translation\", and where the `date` field falls within a specific range.\n\nNote that the search is case-sensitive, so the exact spelling of the words in the query must match the spelling used in the index. Also, the search results are returned based on the relevance score of each document, with the highest scored documents appearing first in the results list.",
    "```\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"match\": {\n            \"title\": \"大语言模型\"\n          }\n        },\n        {\n          \"match\": {\n            \"abstract\": \"大语言模型\"\n          }\n        },\n        {\n          \"match\": {\n            \"author\": \"大语言模型\"\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"term\": {\n            \"date\": {\n              \"gte\": \"2022-01-01\"\n            }\n          }\n        },\n        {\n          \"nested\": {\n            \"path\": \"abstract\",\n            \"query\": {\n              \"match_phrase\": {\n                \"abstract.text\": {\n                  \"query\": \"遵循数据集构建相关的论文\"\n                }\n              }\n            },\n            \"inner_hits\": {}\n          }\n        }\n      ]\n    }\n  }\n}\n```\nNote: This is a basic ES query that uses the `term` and `nested` queries to search for documents with a specific date range and matching text in the `abstract.text` field. The `match_phrase` query is used to match the entire phrase \"遵循数据集构建相关的论文\" in the `abstract.text` field, including any stop words or punctuation. The `inner_hits` object is used to retrieve the matching documents from the nested query.",
    "```\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"multi_match\": {\n            \"query\": \"gpt4 auto generate prompt\",\n            \"fields\": [\"title^2\", \"abstract\", \"author\"]\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "```\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"match\": {\n            \"title\": {\n              \"query\": \"多模态agent\",\n              \"operator\": \"and\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"abstract\": {\n              \"query\": \"相关论文\",\n              \"operator\": \"and\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"multi_match\": {\n            \"query\": \"new big model structure\",\n            \"type\": \"most_fields\",\n            \"operator\": \"and\",\n            \"minimum_should_match\": \"75%\",\n            \"fields\": [\"title^3\", \"abstract\"]\n          }\n        },\n        {\n          \"multi_match\": {\n            \"query\": \"new big model structure\",\n            \"type\": \"phrase\",\n            \"operator\": \"and\",\n            \"minimum_should_match\": \"75%\",\n            \"fields\": [\"title^3\", \"abstract\"]\n          }\n        },\n        {\n          \"multi_match\": {\n            \"query\": \"new big model structure\",\n            \"type\": \"cross_fields\",\n            \"operator\": \"and\",\n            \"minimum_should_match\": \"75%\",\n            \"fields\": [\"title^3\", \"abstract\"]\n          }\n        }\n      ],\n      \"must\": [\n        {\n          \"match\": {\n            \"author.keyword\": {\n              \"query\": \"论文\",\n              \"operator\": \"and\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\nThis ES query uses the `bool` query to specify multiple search conditions and the `multi_match` query to perform a full-text search on multiple fields. The `should` clause is used to include three types of searches: most-fields, phrase, and cross-fields search. The `must` clause is used to filter results by the author keyword. The `minimum_should_match` parameter is set to \"75%\" to ensure that at least 75% of the fields are matched.",
    "```json\n{\n  \"query\": {\n    \"multi_match\": {\n      \"type\": \"most_fields\",\n      \"query\": \"multimodal fine-grained image editing and generation related papers\"\n    }\n  },\n  \"sort\": [\n    \"_score\"\n  ]\n}\n```",
    "```json\n{\n  \"query\": {\n    \"multi_match\": {\n      \"fields\": [\"author\", \"date\", \"title\", \"abstract\"],\n      \"query\": \"机器翻译\"\n    }\n  }\n}\n```\nThis ES query will search for documents where the field \"author\" or \"date\" or \"title\" or \"abstract\" contains the word \"机器翻译\". This is a very broad query, and it will return all the documents that contain this word in any of these fields.\n\nIt's important to note that this query does not specify any specific field, which means that ES will search through all the fields of each document in the index to see if they match the query. This can be time-consuming and may not always return the desired results.\n\nTo improve the recall rate of the search, you could try using a more restrictive query, such as searching for specific authors or publication dates, or adding more specific language analysis techniques like named entity recognition or dependency parsing to the query.",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"match\": {\n            \"author\": {\n              \"query\": \"ner常用的数据集论文\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"title\": {\n              \"query\": \"ner常用的数据集论文\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"abstract\": {\n              \"query\": \"ner常用的数据集论文\"\n            }\n          }\n        }\n      ],\n      \"minimum_should_match\": 1\n    }\n  }\n}\n```",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"multi_match\": {\n            \"query\": \"anti-fact\",\n            \"fields\": [\"title^2\", \"abstract\"],\n            \"type\": \"best_fields\"\n          }\n        },\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"now-7d/d\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"multi_match\": {\n            \"query\": \"Monte Carlo tree search\",\n            \"fields\": [\"author\", \"title\", \"abstract\"]\n          }\n        },\n        {\n          \"multi_match\": {\n            \"query\": \"sequence decision problem\",\n            \"fields\": [\"author\", \"title\", \"abstract\"]\n          }\n        }\n      ]\n    }\n  }\n}\n```\nThis search query uses the `bool` query to combine multiple match clauses with the `should` operator. The `multi_match` clause is used to perform a match against multiple fields, in this case, `author`, `title`, and `abstract`. The query is designed to find documents that contain the terms \"Monte Carlo tree search\" or \"sequence decision problem\" in any of the specified fields.\n\nNote that the use of the `multi_match` clause allows for more flexibility in the search query, as it can match against multiple fields and generate a score for each document based on the relevance of the terms to the document's content.",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"multi_match\": {\n            \"query\": \"gpt4\",\n            \"fields\": [\"title^2\", \"abstract\"]\n          }\n        },\n        {\n          \"multi_match\": {\n            \"query\": \"评测指标优缺点\",\n            \"fields\": [\"title\", \"abstract\"]\n          }\n        }\n      ]\n    }\n  },\n  \"sort\": [\n    {\n      \"date\": {\n        \"order\": \"desc\"\n      }\n    }\n  ],\n  \"from\": 0,\n  \"size\": 10\n}\n```",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"match\": {\n            \"title.english\": {\n              \"query\": \"GPT4v\",\n              \"operator\": \"and\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"author\": {\n              \"query\": \"GPT4v\",\n              \"operator\": \"and\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"abstract\": {\n              \"query\": \"GPT4v\",\n              \"operator\": \"and\"\n            }\n          }\n        }\n      ],\n      \"filter\": [\n        {\n          \"term\": {\n            \"date.year\": {\n              \"value\": 2023,\n              \"boost\": 1.0\n            }\n          }\n        }\n      ]\n    }\n  },\n  \"from\": 0,\n  \"size\": 10,\n  \"track_total_hits\": true,\n  \"timeout\": \"60s\",\n  \"_source\": {\n    \"includes\": [\"author\", \"date\", \"title\", \"abstract\"]\n  }\n}\n```",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"title.en\": \"使用LLM进行蛋白质结构/功能/性质预测的论文\"\n          }\n        },\n        {\n          \"match\": {\n            \"abstract.en\": \"使用LLM进行蛋白质结构/功能/性质预测的论文\"\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "```\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"abstract\": {\n              \"query\": \"BERT\",\n              \"operator\": \"and\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"abstract\": {\n              \"query\": \"RoBERTa\",\n              \"operator\": \"and\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"date\": {\n              \"gte\": \"2022-01-01\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\nThis query will match documents where the field `abstract` contains both \"BERT\" and \"RoBERTa\" as keywords, AND the field `date` is greater than or equal to January 1, 2022.",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"term\": {\n            \"date.keyword\": \"2018\"\n          }\n        },\n        {\n          \"match_phrase\": {\n            \"title\": \"machine translation\"\n          }\n        }\n      ],\n      \"filter\": [\n        {\n          \"terms\": {\n            \"author.keyword\": [\n              \"强化学习\"\n            ]\n          }\n        }\n      ]\n    }\n  },\n  \"from\": 0,\n  \"size\": 10000\n}\n```",
    "```\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"author.name\": \"Transformer\"\n          }\n        },\n        {\n          \"match\": {\n            \"date.year\": \"2017\"\n          }\n        },\n        {\n          \"multi_match\": {\n            \"query\": \"pre-trained\",\n            \"fields\": [\n              \"title^5\",\n              \"abstract\"\n            ],\n            \"type\": \"phrase\"\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "```\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"match\": {\n            \"title\": {\n              \"query\": \"强化学习代码生成\",\n              \"operator\": \"and\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"abstract\": {\n              \"query\": \"强化学习代码生成\",\n              \"operator\": \"and\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"author\": {\n              \"query\": \"强化学习代码生成\",\n              \"operator\": \"and\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "```json\nGET /_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"title\": {\n              \"query\": \"security\",\n              \"operator\": \"and\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"abstract\": {\n              \"query\": \"大模型使用工具\",\n              \"operator\": \"and\"\n            }\n          }\n        }\n      ],\n      \"should\": [\n        {\n          \"match\": {\n            \"author\": {\n              \"query\": \"*\",\n              \"operator\": \"or\"\n            }\n          }\n        },\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"now-30d/d\",\n              \"lte\": \"now/d\"\n            }\n          }\n        }\n      ],\n      \"minimum_should_match\": 1\n    }\n  }\n}\n```",
    "Here's an example of a JSON search query that can help you find papers related to improving training procedures for GPT-generated datasets:\n```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"title\": \"improving\"\n          }\n        },\n        {\n          \"match\": {\n            \"title\": \"GPT-generated\"\n          }\n        },\n        {\n          \"match\": {\n            \"title\": \"data set\"\n          }\n        },\n        {\n          \"match\": {\n            \"title\": \"training\"\n          }\n        }\n      ]\n    }\n  }\n}\n```\nPlease note that this query uses the `match` operator to search for specific words in the title field, and the `bool` query is used to combine these clauses. This should help improve the recall rate of the search by finding relevant papers related to improving training procedures for GPT-generated datasets.",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"title\": {\n              \"query\": \"clip\",\n              \"operator\": \"and\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"abstract\": {\n              \"query\": \"open vocabulary detection\",\n              \"operator\": \"and\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\nThis ES search query is designed to retrieve papers that have the word \"clip\" in their title and also contain the phrase \"open vocabulary detection\" in their abstract. The `bool` operator is used to specify the must clauses, which are combined using the AND operator. The `match` operator is used to search for specific words or phrases in the title and abstract fields.",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"title\": {\n              \"query\": \"self-supervised target detection performance\",\n              \"operator\": \"and\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"abstract\": {\n              \"query\": \"self-supervised target detection performance\",\n              \"operator\": \"and\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"author\": \"使用2020年以后CONLL 2004数据集进行NER评测\"\n          }\n        },\n        {\n          \"match\": {\n            \"date\": {\n              \"query\": \"2020\",\n              \"operator\": \"gte\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"multi_match\": {\n            \"query\": \"CrossWoz\",\n            \"fields\": [\"title^2\", \"author\"]\n          }\n        },\n        {\n          \"multi_match\": {\n            \"query\": \"MultiWoz\",\n            \"fields\": [\"title^3\", \"abstract\"]\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "```json\nGET /my-index/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"2023-01-01\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"author.keyword\": {\n              \"query\": \"hotpotqa\",\n              \"operator\": \"and\"\n            }\n          }\n        }\n      ]\n    }\n  },\n  \"size\": 10,\n  \"from\": 0\n}\n```\nThis ES search query uses the `bool` query to match documents that have a date field greater than or equal to January 1st, 2023, and an author field that contains the word \"hotpotqa\". The `range` query is used to filter on the date field, and the `match` query is used to filter on the author field. The `from` parameter specifies the starting position of the search results, and the `size` parameter specifies the maximum number of results to return.",
    "```json\n{\n  \"query\": {\n    \"multi_match\": {\n      \"query\": \"machine learning psychological health research\",\n      \"fields\": [\"title^2\", \"abstract\"]\n    }\n  }\n}\n```\nThe above query uses the `multi_match` operator to search for both the title and abstract fields of the documents in the index. The `query` parameter is set to \"machine learning psychological health research\" and the `fields` parameter is set to an array containing the field names to search in. The `^2` modifier is used to boost the relevance score of the `title` field, since it is more likely to contain relevant information for this query.",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"title.en\": {\n              \"query\": \"深度学习在医学影像分析中的最新研究\",\n              \"boost\": 2\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"abstract.en\": {\n              \"query\": \"深度学习在医学影像分析中的最新研究\",\n              \"boost\": 1\n            }\n          }\n        }\n      ]\n    }\n  },\n  \"sort\": [\n    {\n      \"date\": {\n        \"order\": \"desc\"\n      }\n    }\n  ],\n  \"size\": 10\n}\n```\nThis ES query will search for the phrase \"深度学习在医学影像分析中的最新研究\" in the title and abstract fields of the documents, with a boost factor of 2 for the title field and 1 for the abstract field. The sort order is by date descending. The size of the result set is limited to 10.",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"title\": \"越狱\"\n          }\n        },\n        {\n          \"match\": {\n            \"abstract\": \"模型\"\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"multi_match\": {\n            \"query\": \"Strengthening Learning in Large-Scale Language Models\",\n            \"fields\": [\"author\", \"title\", \"abstract\"]\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"match\": {\n            \"title\": {\n              \"query\": \"大模型在新任务上面知识迁移的研究\",\n              \"operator\": \"and\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"abstract\": {\n              \"query\": \"大模型在新任务上面知识迁移的研究\",\n              \"operator\": \"and\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\nThe generated ES query statement is only in English, and it searches for the keyword \"大模型在新任务上面知识迁移的研究\" in both the \"title\" and \"abstract\" fields of the ES index. The \"operator\" parameter is set to \"and\" to require both terms to be present in the text.",
    "```\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"date\": {\n              \"query\": \"2023年以后\",\n              \"operator\": \"OR\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"title\": {\n              \"query\": \"大语言模型和人文学科交叉的研究\",\n              \"operator\": \"OR\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"abstract\": {\n              \"query\": \"大语言模型和人文学科交叉的研究\",\n              \"operator\": \"OR\"\n            }\n          }\n        }\n      ]\n    }\n  },\n  \"highlight\": {\n    \"fields\": {\n      \"*\": {}\n    }\n  }\n}\n```\nThis ES search query will match all documents that have the word \"2023年以后\" in the `date` field, and also contain the word \"大语言模型和人文学科交叉的研究\" in either the `title`, `abstract`, or any other field.\n\nThe `match` query is used to search for the exact phrase \"2023年以后\", and the `operator` parameter is set to `\"OR\"` so that the query will match documents where the word \"2023年以後\" appears anywhere in the text, rather than just at the beginning of a sentence.\n\nThe `match` query is used again for the other fields to search for the exact phrase \"大语言模型和人文学科交叉的研究\".\n\nThe `bool` query is used to combine all these queries together, and the `must` parameter is set to make sure that all the conditions specified in the `match` queries are met.\n\nThe `highlight` section is used to highlight the matching text in the returned documents.\n\nNote that the `highlight` section should be removed if you don't need it. Also, the query can be further optimized by using a more specific field for the date (e.g. `published_date`) and/or using a more precise query (e.g. `match_phrase`).",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"title\": {\n              \"query\": \"大语言模型和脑科学交叉的研究\",\n              \"operator\": \"and\"\n            }\n          }\n        },\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"2023-01-01||/d\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"author\": \"AI for Science\"\n          }\n        },\n        {\n          \"range\": {\n            \"date\": {\n              \"gt\": \"2022-01-01\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"date\": \"2023\"\n          }\n        },\n        {\n          \"match\": {\n            \"title\": {\n              \"query\": \"LLM-based Agent\",\n              \"operator\": \"and\"\n            }\n          }\n        }\n      ],\n      \"filter\": [\n        {\n          \"term\": {\n            \"author\": {\n              \"value\": \"综述\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "```\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"multi_match\": {\n            \"query\": \"对比解码综述\",\n            \"fields\": [\"author\", \"title^5\", \"abstract\"]\n          }\n        },\n        {\n          \"multi_match\": {\n            \"query\": \"对比解码综述\",\n            \"fields\": [\"date\"],\n            \"type\": \"phrase\"\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "```\nGET /arxiv/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"terms\": {\n            \"author.keyword\": [\n              \"rlhf\"\n            ]\n          }\n        },\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"now-3M\"\n            }\n          }\n        }\n      ],\n      \"filter\": [\n        {\n          \"match_all\": {}\n        }\n      ]\n    }\n  },\n  \"aggs\": {\n    \"title\": {\n      \"terms\": {\n        \"field\": \"title.keyword\"\n      }\n    }\n  }\n}\n```\nThis ES query searches for all articles on Arxiv related to \"rlhf\" in the author field and within the past three months. It uses a combination of filters and match queries to achieve this. The must clause is used to search for both the author term and the date range. The filter clause is used to apply a match_all query, which allows all documents to pass through the filter. Finally, the title terms aggregation is used to group the results by title.",
    "```json\nGET _search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"author\": {\n              \"query\": \"大模型\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"title\": {\n              \"query\": \"树搜索方法\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"abstract\": {\n              \"query\": \"进行推理的论文\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"date\": {\n              \"query\": \"2023年以后\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"title\": {\n              \"query\": \"关于通过prompt经验性研究大语言模型行为的论文\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"multi_match\": {\n            \"query\": \"cross-modal understanding and generation\",\n            \"fields\": [\"title^2\", \"abstract^1.5\"]\n          }\n        },\n        {\n          \"multi_match\": {\n            \"query\": \"unified modeling\",\n            \"fields\": [\"author^0.5\", \"date^0.5\"]\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match_phrase\": {\n            \"author\": {\n              \"query\": \"关于语言模型奖励建模评估\"\n            }\n          }\n        },\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"now-2y/m\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"match\": {\n            \"author\": {\n              \"query\": \"position coding\",\n              \"operator\": \"and\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"title\": {\n              \"query\": \"improving model long-sequence prediction\",\n              \"operator\": \"and\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"abstract\": {\n              \"query\": \"position coding\",\n              \"operator\": \"or\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"author.keyword\": \"利用大模型做数学题生成的论文\"\n          }\n        },\n        {\n          \"match\": {\n            \"title.keyword\": \"利用大模型做数学题生成的论文\"\n          }\n        },\n        {\n          \"match\": {\n            \"abstract.keyword\": \"利用大模型做数学题生成的论文\"\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "```\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"multi_match\": {\n            \"query\": \"验证模型推理能力\",\n            \"fields\": [\"title^2\", \"abstract\"]\n          }\n        },\n        {\n          \"multi_match\": {\n            \"query\": \"验证模型推理能力\",\n            \"fields\": [\"title\", \"abstract\"]\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"author\": {\n              \"query\": \"大模型\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"title\": {\n              \"query\": \"论文查找\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"abstract\": {\n              \"query\": \"论文查找\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"title\": {\n              \"query\": \"distributed word representation\",\n              \"operator\": \"and\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"abstract\": {\n              \"query\": \"distributed word representation\",\n              \"operator\": \"and\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"author\": {\n              \"query\": \"distributed word representation\",\n              \"operator\": \"and\"\n            }\n          }\n        }\n      ],\n      \"filter\": [\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"2000-01-01\",\n              \"lte\": \"2010-12-31\"\n            }\n          }\n        }\n      ]\n    }\n  },\n  \"from\": 0,\n  \"size\": 5,\n  \"track_total_hits\": true\n}\n```",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"match\": {\n            \"title\": {\n              \"query\": \"nips 2023 paper list\",\n              \"analyzer\": \"english\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"abstract\": {\n              \"query\": \"nips 2023 paper list\",\n              \"analyzer\": \"english\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"author\": {\n              \"query\": \"nips 2023 paper list\",\n              \"analyzer\": \"english\"\n            }\n          }\n        }\n      ],\n      \"minimum_should_match\": 1\n    }\n  },\n  \"highlight\": {\n    \"pre_tags\": [\"<strong>\"],\n    \"post_tags\": [\"</strong>\"]\n  }\n}\n```",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"title\": {\n              \"query\": \"搜广推工作落地实践\",\n              \"operator\": \"and\"\n            }\n          }\n        },\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"now-1y\",\n              \"lte\": \"now\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\nThis ES query uses the `match` and `range` operators to search for papers with the title containing the keyword \"搜广推工作落地实践\" published within the last year. The `must` clause is used to combine these two queries.",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"match\": {\n            \"title\": {\n              \"query\": \"闭源大模型用户数据隐私保护研究\",\n              \"operator\": \"and\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"abstract\": {\n              \"query\": \"闭源大模型用户数据隐私保护研究\",\n              \"operator\": \"and\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"match\": {\n            \"title\": {\n              \"query\": \"similar to AutoGPT\",\n              \"operator\": \"and\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"abstract\": {\n              \"query\": \"similar to AutoGPT\",\n              \"operator\": \"and\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"author\": {\n              \"query\": \"similar to AutoGPT\",\n              \"operator\": \"and\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"date\": {\n              \"query\": \"similar to AutoGPT\",\n              \"operator\": \"and\"\n            }\n          }\n        }\n      ]\n    }\n  },\n  \"size\": 10\n}\n```",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"multi_match\": {\n            \"fields\": [\"author\", \"title\", \"abstract\"],\n            \"query\": \"近一年发表的有关多模态大模型与产业相结合、与具体应用场景相结合的论文\"\n          }\n        }\n      ]\n    }\n  },\n  \"sort\": [\n    {\n      \"date\": {\n        \"order\": \"desc\"\n      }\n    }\n  ],\n  \"size\": 50,\n  \"from\": 0\n}\n```\nThis search query will match documents that have the words \"近一年发表的\" in the `author` or `title` or `abstract` field, and the words \"有关多模态大模型与产业相结合、与具体应用场景相结合的论文\" in any of the other fields. The search query will also sort the results by the `date` field in descending order, and return 50 documents at a time with an offset of 0.",
    "```\n{\n\"query\": {\n\"bool\": {\n\"must\": [\n{\n\"multi_match\": {\n\"query\": \"深度学习在医学影像分析中的最新研究\",\n\"type\": \"best_fields\",\n\"fields\": [\"title^3\", \"author^2\", \"abstract\"]\n}\n},\n{\n\"multi_match\": {\n\"query\": \"自动标注和迁移学习方法\",\n\"type\": \"best_fields\",\n\"fields\": [\"title^2\", \"author\", \"abstract\"]\n}\n},\n{\n\"range\": {\n\"date\": {\n\"gte\": \"2019-01-01\",\n\"lte\": \"now\"\n}\n}\n}\n]\n}\n}\n},\n\"sort\": [\n{\n\"date\": \"desc\"\n}\n]\n}\n```",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"term\": {\n            \"author.keyword\": \"自然语言处理领域中\"\n          }\n        },\n        {\n          \"term\": {\n            \"title.keyword\": \"Transformer模型\"\n          }\n        },\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"now-1y\",\n              \"lte\": \"now\"\n            }\n          }\n        }\n      ]\n    }\n  },\n  \"aggs\": {\n    \"performance_metrics\": {\n      \"terms\": {\n        \"field\": \"abstract.keyword\",\n        \"size\": 10\n      }\n    }\n  }\n}\n```\nThe generated ES query search for papers related to natural language processing domain using Transformer model and pre-trained on large datasets, specifically focusing on the structure of the model and performance metrics. The query filters the results by author, date range (last year), and title containing \"Transformer模型\" and performs a terms aggregation on the abstract field.",
    "```\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"title\": {\n              \"query\": \"research on artificial intelligence\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"abstract\": {\n              \"query\": \"advances in AI research or survey papers\"\n            }\n          }\n        }\n      ],\n      \"should\": [\n        {\n          \"match\": {\n            \"author\": {\n              \"query\": \"researchers or academics in AI field\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"date\": {\n              \"query\": \"2019-2025\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"title\": {\n              \"query\": \"applications of AI or related fields\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\nThe above query is written in JSON format and can be used to search for research articles, surveys, or theses on artificial intelligence with specific focus on different domains, methods, and applications, as well as the challenges and future directions of AI research. The query will match documents that contain the keyword \"research on artificial intelligence\" in the title field, the keyword \"advances in AI research\" in the abstract field, or the keyword \"applications of AI or related fields\" in the author field, and will also match documents with a publication date within the range of 2019-2025. The \"should\" clause is used to indicate that the search results should include documents that contain either of these keywords."
]