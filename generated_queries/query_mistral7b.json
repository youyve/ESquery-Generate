[
    "Based on your query in English translation being \"papers related to learning with large models\", here is a possible Elasticsearch search query using less restrictive terms and expanding the search scope:\n\n```json\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        { \"match\": { \"title\": { \"query\": \"learning large models\", \"type\": \"phrase_prefix\" } } },\n        { \"match\": { \"abstract\": { \"query\": \"large model tools learning\", \"analyzer\": \"english\" } } },\n        { \"match\": { \"author\": { \"query\": \"*large model*\", \"minimum_should_match\": 1, \"type\": \"bool_prefix\" } } },\n        { \"range\": { \"date\": { \"gte\": \"2020-01-01\" } } }\n      ],\n      \"minimum_should_match\": 3\n    }\n  }\n}\n```\n\nThis query uses a `bool` query with a `should` clause to match documents where any of the specified fields contain the given phrases or terms. The `title` and `abstract` fields use a phrase prefix query to find documents with \"learning large models\" appearing as a phrase in the title, and \"large model tools learning\" appearing in the abstract, respectively. The author field uses a bool prefix query to find documents where any term that starts with \"large model\" appears in the author name. The date field is restricted to only documents published from 2020 onwards.\n\nPlease note that the effectiveness of this search query depends on the quality and richness of the text data in your Elasticsearch index, as well as the relevance and precision of the user query itself.",
    "Based on your user query \"和大模型可解释相关的最新论文\" which translates to \"papers related to explainable large models most recent\" in English. Here's the corresponding Elasticsearch search query using less restrictive queries and expanding the search scope to increase recall:\n\n```json\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"match\": {\n            \"title\": {\n              \"query\":   \"large models explainable\",\n              \"analyzer\": \"english\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"abstract\": {\n              \"query\":   \"large models explainable\",\n              \"analyzer\": \"english\"\n            }\n          }\n        }\n      ],\n      \"filter\": [\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"2021-01-01\"\n            }\n          }\n        },\n        {\n          \"term\": {\n            \"_index\": \"papers\" // Replace 'papers' with your index name.\n          }\n        }\n      ]\n    }\n  }\n}\n```\nThis query searches for papers where the title or abstract contains the phrases \"large models explainable\", and have a publication date equal to or greater than January 1st, 2021. The search is performed in the 'papers' index by default but replace it with your index name if it's different.",
    "```{\"query\": { \"bool\": { \"must\": [ { \"match\": { \"title\": \"{your query here}\" } }, { \"match\": { \"abstract\": \"{your query here}\" } } ], \"should\": [ { \"prefix\": { \"title\": \"大模型 Agent\" } }, { \"prefix\": { \"abstract\": \"大模型 Agent\" } } ]}},\"size\": 10, \"_source\": [\"title\", \"author\", \"date\"]}}\n```\nReplace `{your query here}` with the translated query: 'Find papers about the latest publications on large model Agents'. This query uses a boolean query with a must clause for exact title and abstract matches, and a should clause with prefix queries to capture partial matches in the title and abstract fields. The result will contain up to 10 documents, including the title, author, and date fields.",
    "{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"now-1y\"\n            }\n          }\n        },\n        {\n          \"multi_match\": {\n            \"query\": \"model inference acceleration\",\n            \"fields\": [\"title^2\", \"abstract\"]\n          }\n        }\n      ],\n      \"minimum_should_match\": 1\n    }\n  }\n}",
    "Based on your query in English: \"find papers with details description of instruction tuning in abstracts\", here is an ES search query using less restrictive queries and expanding the search scope:\n\n```json\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"match\": {\n            \"abstract\": {\n              \"query\": \"instruction tuning details description\",\n              \"type\": \"phrase_prefix\"\n            }\n          }\n        },\n        {\n          \"match\": {\n            \"title\": {\n              \"query\": \"instruction tuning details description\",\n              \"type\": \"phrase_prefix\"\n            }\n          }\n        }\n      ],\n      \"minimum_should_match\": 1\n    }\n  },\n  \"_source\": [\"author\", \"date\", \"title\"],\n  \"_size\": 10\n}\n```\nThis ES search query searches for papers based on the presence of the phrases 'instruction tuning details description' either in the abstract or title. It uses a less restrictive 'phrase_prefix' query instead of exact phrase match and does not set a specific field to boost as we don't have enough context about the fields' importance. The \"_size\" parameter limits the output to 10 results.",
    "Based on your user query in English, \"find latest progress of OCR text detection\", here is a possible Elasticsearch search query statement:\n\n```json\n{\n  \"size\": 10,\n  \"_source\": [\"title\"],\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        { \"match\": { \"title\": { \"query\": \"OCR text detection progress\", \"type\": \"phrase_prefix\" } } },\n        { \"range\": { \"date\": { \"gte\": \"2021-01-01\" } } }\n      ],\n      \"minimum_should_match\": 1\n    }\n  }\n}\n```\n\nThis query statement uses a phrase prefix match on the title field with the given query, and also limits the search results to records where the date is later than January 1st, 2021. It will output the first 10 documents (JSON result) that match this condition, with only the 'title' field being included in the response.",
    "Based on your user query in Chinese, which translates to \"Find the latest developments in OCR text recognition,\" here is an ES search query that should increase recall:\n\n```json\n{\n  \"query\": {\n    \"multi_match\": {\n      \"query\": \"OCR text recognition latest developments\",\n      \"fields\": [\"title^3\", \"abstract^3\"]\n    }\n  },\n  \"_source\": [\"author\", \"date\", \"title\", \"abstract\"]\n}\n```\n\nThis query uses the `multi_match` query with the fields 'title' and 'abstract' given a boost of `3`, to increase recall. The user-provided search term is spread across these fields, making it less restrictive and allowing for more potential matches.",
    "Based on your query in English translation being \"recent articles in the agent series by decision papers\", here's an example ES search query using less restrictive queries and expanding the search scope:\n```json\n{\n  \"size\": 10,\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        { \"match\": { \"title\": \"agent series decision papers\" }},\n        { \"match\": { \"abstract\": \"agent series decision papers\" }},\n        { \"range\": { \"date\": { \"gte\": \"now-3m\" } }}\n      ],\n      \"minimum_should_match\": 2\n    }\n  },\n  \"_source\": [\"title\", \"author\", \"_score\"]\n}\n```\nThis query uses the `bool` query with a `should` clause that includes matching terms for both 'title' and 'abstract' fields, along with a `range` query to search documents within the past three months. The query also returns only the relevant JSON output with the source fields specified.",
    "{\n \"query\": {\n \"bool\": {\n \"must\": [\n {\n \"multi\\_match\": {\n \"query\": \"find papers related to multi-modal optimization training methods\",\n \"fields\": [\"title^2\", \"abstract\"]\n }\n },\n {\n \"bool\": {\n \"should\": [\n {\n \"synonym\": {\n \"field\": \"title\",\n \"synonyms\": [\"查找\", \"find\"],\n \"type\": \"phrase_prefix\"\n },\n {\n \"synonym\": {\n \"field\": \"abstract\",\n \"synonyms\": [\"多模态优化训练方式\", \"multi-modal optimization training methods\"]\n }\n },\n {\n \"bool\": {\n \"should\": [\n {\n \"wildcard\": {\n \"title\": \"*优化训练方式*\"\n },\n {\n \"wildcard\": {\n \"abstract\": \"*多模态优化训练方式*\"\n }\n }\n ]\n }\n }\n ],\n \"minimum\\_should\\_match\": 1\n }\n }\n}\n}\n}\n\nNote that the above query statement uses less restrictive techniques, such as using multi-match query for title and abstract fields with lower boost value (^2), and expanding the search scope by using synonym and wildcard queries. This is to increase the recall rate of the search while keeping the query statement only in English.",
    "Based on the provided user query in Chinese, which translates to \"papers related to security with large models\" in English, here's the ES search query:\n\n```json\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"multi_match\": {\n            \"query\": \"large models\",\n            \"fields\": [\"title^3\", \"abstract^3\"]\n          }\n        },\n        {\n          \"multi_match\": {\n            \"query\": \"security\",\n            \"fields\": [\"title^2\", \"abstract^2\"]\n          }\n        },\n        {\n          \"bool\": {\n            \"must\": [\n              {\n                \"term\": {\n                  \"author\": \"\"\n                }\n              },\n              {\n                \"range\": {\n                  \"date\": {\n                    \"gte\": \"YYYY-MM-DD\"\n                  }\n                }\n              },\n              {\n                \"range\": {\n                  \"date\": {\n                    \"lte\": \"YYYY-MM-DD\"\n                  }\n                }\n              }\n            ],\n            \"minimum_should_match\": 2\n          }\n        }\n      ],\n      \"adjust_pure_boost\": false,\n      \"use_dismax\": false\n    }\n  },\n  \"_source\": [\"author\", \"date\", \"title\", \"abstract\"]\n}\n```\n\nReplace the placeholders `YYYY-MM-DD` with the desired date range and ensure that your Elasticsearch server is configured to accept the given query. Note that this query assumes a well-structured index. Adjust the fields and weights as needed for your use case.",
    "Based on your query \"查找大模型推理的论文\" which means \"Find papers on large model inference\", here's a less restrictive ES search query in English:\n\n```json\n{\n  \"query\": {\n    \"multi_match\": {\n      \"query\": \"large model inference\",\n      \"fields\": [\"title^3\", \"abstract\"]\n    }\n  },\n  \"_source\": [\"author\", \"date\", \"title\"]\n}\n```\n\nThis search query will look for documents that contain the phrases 'large' and 'model' anywhere within the title or abstract fields, giving higher relevance to fields that match more closely (in this case, title gets a boost of 3). It will return the JSON results including the 'author', 'date', and 'title' fields.",
    "Based on the user query provided, here's a possible Elasticsearch search query in English:\n\n```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"now-3m\"\n            }\n          }\n        },\n        {\n          \"multi_match\": {\n            \"query\": \"natural language processing\",\n            \"fields\": [\"title^2\", \"abstract\"]\n          }\n        }\n      ],\n      \"minimum_should_match\": 1\n    }\n  },\n  \"_source\": [\"author\", \"date\", \"_id\", \"title\", \"abstract\"],\n  \"_source_includes\": [\"author\", \"date\", \"title\", \"abstract: { 'excludes': ['stopwords'] }\"]\n}\n```\n\nThis Elasticsearch query uses a `bool` query with a range filter on the `date` field to limit results to the last few months and a multi-match query on the `title` and `abstract` fields for natural language processing. It also specifies to include the desired source fields in the JSON output.",
    "{\n\n\"query\": {\n\"bool\": {\n\"must\": [\n{\n\"multi\\_match\": {\n\"query\": \"multilingual sentiment analysis latest papers\",\n\"type\": \"phrase_prefix\",\n\"fields\": [\"title^3\", \"abstract^3\"]\n}\n},\n{\n\"filter\": {\n\"bool\": {\n\"should\": [\n{\n\"term\": {\n\"language\": \"eng\"\n}\n},\n{\n\"term\": {\n\"language\": \"none\"\n}\n}\n],\n\"minimum\\_should\\_match\": 1,\n\"boost\": 2.0\n}\n}\n}\n]\n},\n\"size\": 10,\n\"sort\": [\n{\n\"_score\": {\n\"order\": \"desc\"\n}\n},\n{\"date\": {\"order\": \"desc\"}}\n],\n\"_source\": [\"title\", \"abstract\"]\n}\n}",
    "```json\n\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"2023\"\n            }\n          }\n        },\n        {\n          \"multi_match\": {\n            \"query\": \"NLP domain continuing learning\",\n            \"fields\": [\"title^5\", \"abstract\"]\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "```json\n\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"multi_match\": {\n            \"query\": \"recent paper model evaluation\",\n            \"fields\": [\"title^3\", \"abstract\"]\n          }\n        },\n        {\n          \"filter\": {\n            \"term\": { \"fields\": \"subject\" }\n          }\n        },\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"2021-01-01\"\n            }\n          }\n        },\n        {\n          \"bool\": {\n            \"must_not\": {\n              \"term\": { \"fields\": \"status.keyword\" }\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\nThis query uses a `bool` query with `must` clauses that searches the 'title' and 'abstract' fields for the phrase 'recent paper model evaluation'. It also includes a `filter` clause to search the 'subject' field for the term '大模型评测' (which translates to 'big model evaluation'). The query uses a range filter to only return documents with a date greater than or equal to 2021-01-01. Lastly, it excludes any documents that have a status of 'deleted'. This query should help increase the recall rate of the search by using less restrictive queries and expanding the search scope.",
    "```javascript\n[{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"now-1m\"\n            }\n          }\n        },\n        {\n          \"bool\": {\n            \"should\": [\n              {\n                \"multi_match\": {\n                  \"query\": \"multi modal large model\",\n                  \"fields\": [\"title^3\", \"abstract\"]\n                }\n              },\n              {\n                \"bool\": {\n                  \"should\": [\n                    {\n                      \"field\": {\n                        \"field1\": \"author\"\n                      },\n                      \"query\": {\n                        \"multi_match\": {\n                          \"query\": \"multi modal large model\",\n                          \"fields\": [\"title^3\", \"abstract\"]\n                        }\n                      }\n                    },\n                    {\n                      \"field\": {\n                        \"field1\": \"title\"\n                      },\n                      \"query\": {\n                        \"multi_match\": {\n                          \"query\": \"多模态大模型\",\n                          \"fields\": [\"title^3\", \"abstract\"]\n                        }\n                      }\n                    },\n                    {\n                      \"field\": {\n                        \"field1\": \"title\"\n                      },\n                      \"query\": {\n                        \"multi_match\": {\n                          \"query\": \"近一个月\",\n                          \"fields\": [\"abstract\"]\n                        }\n                      }\n                    },\n                    {\n                      \"field\": {\n                        \"field1\": \"title\"\n                      },\n                      \"query\": {\n                        \"multi_match\": {\n                          \"query\": \"与相关\",\n                          \"fields\": [\"abstract\"]\n                        }\n                      }\n                    }\n                  ]\n                }\n              }\n            ]\n          }\n        }\n      ]\n    }\n  }\n}]\n```\n\nThis query uses a `bool` query with a `range` filter on the `date` field to find documents within the last month and a `should` clause in the `multi_match` query to search for documents related to \"multi modal large model\" in either the title or abstract fields. The query also searches for documents where the title or abstract contains \"近一个月\" (Chinese for \"within the last month\") and \"与相关\" (Chinese for \"related to\"). By using a less restrictive query and expanding the search scope, we can increase the recall rate of the search.",
    "Based on your query \"查找近六个月工具学习评测数据集的论文\" which means \"Find papers about tool learning assessment datasets in the past six months\", here is the ES search query:\n\n```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"6m ago\"\n            }\n          }\n        },\n        {\n          \"multi_match\": {\n            \"query\": \"tool learning assessment datasets\",\n            \"fields\": [\"title^3\", \"abstract\"]\n          }\n        }\n      ]\n    }\n  },\n  \"_source\": [\"author\", \"title\", \"abstract\"],\n  \"_source_excludes\": []\n}\n```",
    "Based on your query \"查找一下工具评测相关论文\" which means \"Find papers related to tool evaluations\", here's an ES search query in English:\n\n```json\n{\n  \"query\": {\n    \"multi_match\": {\n      \"query\": \"tool evaluation, paper\",\n      \"fields\": [\"title^3\", \"abstract\"]\n    }\n  },\n  \"_source\": [\"author\", \"date\", \"title\"]\n}\n```\n\nThis search query is designed to be less restrictive and expand the search scope by using a `multi_match` query on fields \"title\" and \"abstract\". The keywords \"tool evaluation, paper\" are used in the query with a boost of 3 for the 'title' field. This may help increase the recall rate when searching for papers related to tool evaluations.",
    "Based on the given user query '大模型在游戏方面的论文' which translates to 'papers on large models in gaming', here's an English ES search query statement with a less restrictive approach:\n\n```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        { \"match\": { \"title\": { \"query\": \"large models games\", \"type\": \"phrase_prefix\" } } },\n        { \"multi_match\": { \"query\": \"large models gaming papers\", \"fields\": [\"title^2\", \"abstract\"] }}\n      ],\n      \"should\": [],\n      \"minimum_should_match\": 1\n    }\n  }\n}\n```\n\nThis query uses a `bool` query with the `must` clause to look for papers that have either 'large models' or 'games' in their title as separate terms, but also allows for proximity and partial matching through using the `title^2` weight and the `multi_match` query on the 'abstract' field. The `should` clause is empty to avoid any further restrictions.",
    "Based on the user query \"对比解码相关论文\" which means \"papers related to comparison decoding\" in English, here's the corresponding ES search query:\n\n```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"multi_match\": {\n            \"query\": \"comparison decoding\",\n            \"fields\": [\"title^2.0\", \"abstract^1.5\"]\n          }\n        },\n        {\n          \"bool\": {\n            \"should\": [\n              {\n                \"term\": {\n                  \"title\": \"comparison decoding\"\n                }\n              },\n              {\n                \"term\": {\n                  \"abstract\": \"comparison decoding\"\n                }\n              }\n            ],\n            \"minimum_should_match\": 1\n          }\n        }\n      ]\n    }\n  },\n  \"_source\": [\"author\", \"date\", \"title\"]\n}\n```\n\nThis query uses a `bool` query with `must` clause to search for documents containing the terms \"comparison decoding\" in the title or abstract fields. The `should` clause within the `bool` query expands the search scope by looking for terms in either field as well. Additionally, the lower boost value (^1.5) is set for the abstract field to prioritize the title field. This ES query should increase the recall rate of the search while adhering to the given requirements.",
    "Based on your user query in English being \"Please find papers that affect the label for noise reduction\", I would suggest the following ElasticSearch query in English:\n\n```json\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        { \"multi_match\": { \"query\": \"noise reduction label impact\", \"fields\": [\"title^2.5\", \"abstract\"] } },\n        { \"multi_match\": { \"query\": \"impact label noise reduction\", \"fields\": [\"title^2.5\", \"abstract\"] } },\n        { \"multi_match\": { \"query\": \"label noise reduction papers\", \"fields\": [\"title^2.5\", \"abstract\"] } },\n        { \"multi_match\": { \"query\": \"papers label noise reduction impact\", \"fields\": [\"title^2.5\", \"abstract\"] } }\n      ],\n      \"minimum_should_match\": 1,\n      \"adjust_weights\": true\n    }\n  }\n}\n```\n\nThis query utilizes a `bool` query with multiple clauses, where each clause consists of a `multi_match` query that checks for different variations of the user query in the fields 'title' and 'abstract'. The query also uses field weighting to increase recall by making matches on words closer to the start of a title or abstract more impactful.",
    "Based on your query in English: \"Look up if there are studies about large models dealing with semantic collapse issues in text retrieval tasks.\"\n\nES search query:\n```json\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        { \"multi_match\": { \"query\": \"large models\", \"fields\": [\"title^2.0\", \"abstract\"] }},\n        { \"multi_match\": { \"query\": \"semantic collapse\", \"fields\": [\"title^2.0\", \"abstract\"] }}\n      ],\n      \"must\": [\n        { \"field\": { \"index\": \"task\" } },\n        { \"bool\": { \"should\": [ { \"term\": { \"index\": \"text retrieval\" }}, { \"term\": { \"index\": \"NLP\" }}]}}\n      ]\n    }\n  }\n}\n```\nThis query looks for documents that contain both the terms 'large models' and 'semantic collapse' in either the title or abstract fields, with a higher relevance score for the term 'large models'. The search is also limited to tasks related to text retrieval or NLP (Natural Language Processing).",
    "Based on your query, I assume you are asking for papers that discuss evaluation of machine translation datasets' quality. Here is the ES search query in English:\n\n```json\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"multi_match\": {\n            \"query\": \"machine translation dataset quality assessment\",\n            \"fields\": [\"title^3\", \"abstract\"]\n          }\n        },\n        {\n          \"multi_match\": {\n            \"query\": \"help needed evaluate machine translation data set quality papers\",\n            \"fields\": [\"title\", \"abstract\"]\n          }\n        },\n        {\n          \"multi_match\": {\n            \"query\": \"assessing machine translation dataset quality\",\n            \"fields\": [\"title\", \"abstract\"]\n          }\n        },\n        {\n          \"bool\": {\n            \"must\": [\n              {\n                \"wildcard\": {\n                  \"author\": \"*机器翻译*\"\n                }\n              },\n              {\n                \"range\": {\n                  \"@timestamp\": {\n                    \"gte\": \"2018-01-01T00:00:00\",\n                    \"lte\": \"2023-12-31T23:59:59Z\"\n                  }\n                }\n              },\n              {\n                \"bool\": {\n                  \"must_not\": [\n                    {\n                      \"term\": {\n                        \"doi\": null\n                      }\n                    },\n                    {\n                      \"term\": {\n                        \"publisher\": {\n                          \"exact\": \"your_specific_publisher\"\n                        }\n                      }\n                    }\n                  ]\n                }\n              }\n            ]\n          }\n        }\n      ],\n      \"minimum_should_match\": 3\n    }\n  },\n  \"_source\": [\"title\", \"abstract\"]\n}\n```\n\nReplace 'your_specific_publisher' with the name of the publisher you want to exclude from the search results.",
    "```json\n\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"multi_match\": {\n            \"query\": \"大语言模型\",\n            \"fields\": [\"title^2\", \"abstract\"]\n          }\n        },\n        {\n          \"filter\": {\n            \"term\": {\n              \"type\": \"分析类型\" // Assuming 'type' is an indexed field\n            }\n          }\n        }\n      ],\n      \"should\": [\n        {\n          \"multi_match\": {\n            \"query\": \"大语言模型\",\n            \"fields\": [\"author\", \"title^2\", \"abstract\"]\n          }\n        },\n        {\n          \"multi_match\": {\n            \"query\": \"大語言模型\",\n            \"fields\": [\"title^2\", \"abstract\"],\n            \"type\": \"cross_fields\"\n          }\n        },\n        {\n          \"wildcard\": {\n            \"title\": {\n              \"value\": \"*大语言模型*\"\n            }\n          }\n        },\n        {\n          \"fuzzy\": {\n            \"title\": {\n              \"value\": \"大語言模型\",\n              \"prefix_length\": 1,\n              \"maxExpansions\": 50\n            }\n          }\n        }\n      ]\n    }\n  },\n  \"_source\": [\"author\", \"date\"] // Output only the required fields in the source\n}\n```\n\nThis Elasticsearch query searches for papers related to '大语言模型' (big language model) with an analysis type. It uses less restrictive queries such as expanding the search scope to the title and abstract fields, applying wildcard queries, fuzzy queries, and multi-match queries with different prefix lengths to increase the recall rate of the search. Only the JSON result containing the 'author' and 'date' fields will be output.",
    "Based on your user query in English: \"query papers published since 2022 that follow data sets construction in their topics\", the ES search query could be:\n\n```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"2022-01-01\",\n              \"format\": \"yyyy-MM-dd\"\n            }\n          }\n        },\n        {\n          \"multi_match\": {\n            \"query\": \"data sets construction\",\n            \"fields\": [\"title^3\", \"abstract\"]\n          }\n        },\n        {\n          \"bool\": {\n            \"should\": [\n              {\n                \"term\": {\n                  \"author.first_name.keyword\": \"\"\n                }\n              },\n              {\n                \"term\": {\n                  \"author.last_name.keyword\": \"\"\n                }\n              }\n            ],\n            \"minimum_should_match\": 1\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\nThis query searches for documents where the date is greater than or equal to '2022-01-01', the title or abstract contains the phrase \"data sets construction\", and has at least one author whose name appears in the result (empty author fields are considered valid, meaning that an article without authors would still be returned). The search scope includes titles and abstracts using a less restrictive query with a lower boost for the 'abstract' field.",
    "```json\n\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"multi_match\": {\n            \"query\": \"gpt4, generate, prompt, paper\",\n            \"fields\": [\"title^3\", \"abstract\"]\n          }\n        },\n        {\n          \"prefix\": {\n            \"title\": {\n              \"value\": \"gpt4\"\n            }\n          }\n        },\n        {\n          \"bool\": {\n            \"should\": [\n              {\n                \"term\": {\n                  \"abstract.keyword\": \"generate\"\n                }\n              },\n              {\n                \"term\": {\n                  \"abstract.keyword\": \"prompt\"\n                }\n              },\n              {\n                \"term\": {\n                  \"abstract.keyword\": \"paper\"\n                }\n              }\n            ],\n            \"minimum_should_match\": 2\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "Based on your query in English: \"Find papers related to multimodal agents with embodied intelligence\", here's an ElasticSearch search query that could help increase recall:\n\n```json\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        { \"multi_match\": { \"query\": \"multimodal agent\", \"fields\": [\"title^3\", \"abstract\"] }},\n        { \"multi_match\": { \"query\": \"embodied intelligence\", \"fields\": [\"title^3\", \"abstract\"] }}\n      ],\n      \"minimum_should_match\": 1,\n      \"adjust_priorities\": false\n    }\n  }\n}\n```\n\nThis ElasticSearch query uses a `bool` query with multiple `should` clauses and `multi_match` queries. The search terms 'multimodal agent' and 'embodied intelligence' are used in the `query` field of each `multi_match` query. The search fields are set to \"title\" and \"abstract\", and a boost of 3 is applied to these fields to prioritize documents with matching terms closer to the start of the document text. Adjusting priorities is false, so all fields will be considered equally during scoring. This query aims to provide a larger scope and potentially higher recall for your search.",
    "Based on the given user query in English: \"research papers related to the new structures of large models\"\n\nHere's the ES search query:\n```json\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        { \"multi_match\": { \"query\": \"new structures of large models\", \"fields\": [\"title^2\", \"abstract\"] } },\n        { \"multi_match\": { \"query\": \"large model new structures\", \"fields\": [\"title^2\", \"abstract\"] } },\n        { \"multi_match\": { \"query\": \"new large model structures\", \"fields\": [\"title^2\", \"abstract\"] } },\n        { \"multi_match\": { \"query\": \"models new large structures\", \"fields\": [\"title^2\", \"abstract\"] } }\n      ]\n    }\n  }\n}\n```\nThis query uses the `bool` query with multiple `should` clauses for less restrictive queries. The `multi_match` query searches in both the title and abstract fields with a higher weight (^2) to increase the recall rate.",
    "Based on your query, here's an English translation and an Elasticsearch search query using the given fields:\n\nQuery: '多模态细粒度图片编辑和生成相关论文.' (Multiple modal fine-grained image editing and generation related papers.)\n\nTranslation: Multiple modal fine-grained image editing and generation papers.\n\nSearch query:\n```json\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        { \"match\": { \"title\": \"multiple modal fine-grained image editing\" } },\n        { \"match\": { \"title\": \"multiple modal image generation\" } },\n        { \"match\": { \"abstract\": \"multiple modal fine-grained image editing\" } },\n        { \"match\": { \"abstract\": \"multiple modal image generation\" } }\n      ],\n      \"minimum_should_match\": 1\n    }\n  }\n}\n```",
    "Based on your query \"帮我查找风格化机器翻译相关的论文\", which translates to \"Help me find papers related to stylistic machine translation\" in English. Here's a less restrictive ES search query:\n\n```json\n{\n  \"query\": {\n    \"multi_match\": {\n      \"query\": \"stylistic machine translation, machine translation, paper\",\n      \"fields\": [\"title^3\", \"abstract^3\"]\n    }\n  }\n}\n```\n\nThis query uses the `multi_match` query type to search for the specified terms in both the title and abstract fields with a higher weight (denoted by the `^3` prefix) to increase recall. Note that the generated JSON result is not included in this response since you specifically asked for the query statement only.",
    "Based on your query, I assume you are looking for papers with Chinese authors using the term \"ner\" (presumably Natural Entity Recognition) in their title or abstract. Here's the corresponding ES search query:\n\n```json\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"multi_match\": {\n            \"query\": \"ner\",\n            \"fields\": [\"title^3\", \"abstract\"]\n          }\n        },\n        {\n          \"filter\": {\n            \"term\": {\n              \"author.language\": \"zh\"\n            }\n          }\n        }\n      ],\n      \"minimum_should_match\": 1\n    }\n  }\n}\n```\n\nThis query uses a bool query with a multi_match query and a filter query to expand the search scope and increase recall rate. The `multi_match` query searches for the term 'ner' in titles and abstracts with a higher boost for titles (3). The `filter` query narrows down the search to only Chinese documents based on their author language.",
    "Based on your user query in English, here's an ElasticSearch query that could help you find relevant articles using less restrictive queries and expanding the search scope:\n\n```json\n{\n  \"size\": 10,\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"multi_match\": {\n            \"query\": \"reverse fact data augmentation\",\n            \"fields\": [\"title\", \"abstract\"]\n          }\n        },\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"2021-01-01\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\nThis query uses a Boolean Query to combine the conditions. The `multi_match` query searches for the phrase \"reverse fact data augmentation\" in the title and abstract fields using the `relevance` query type. Additionally, we set a minimum date for articles to be returned since the user requested recent articles. Remember that this is just a starting point, you may need to fine-tune the query based on your specific requirements and index data.",
    "``{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"multi_match\": {\n            \"query\": \"Monte Carlo tree search sequence decision problem papers\",\n            \"fields\": [\"title^3\", \"abstract\"]\n          }\n        },\n        {\n          \"bool\": {\n            \"must_not\": {\n              \"term\": {\n                \"title.keyword\": \"stopwords\"\n              }\n            },\n            \"should\": [\n              {\n                \"multi_match\": {\n                  \"query\": \"Monte Carlo tree search\",\n                  \"fields\": [\"author\", \"title^3\", \"abstract\"]\n                }\n              },\n              {\n                \"multi_match\": {\n                  \"query\": \"sequence decision problem\",\n                  \"fields\": [\"author\", \"title^3\", \"abstract\"]\n                }\n              },\n              {\n                \"bool\": {\n                  \"should\": [\n                    {\n                      \"multi_match\": {\n                        \"query\": \"Monte Carlo tree search papers\",\n                        \"fields\": [\"title^3\", \"abstract\"]\n                      }\n                    },\n                    {\n                      \"multi_match\": {\n                        \"query\": \"sequence decision problem papers\",\n                        \"fields\": [\"title^3\", \"abstract\"]\n                      }\n                    }\n                  ],\n                  \"minimum_should_match\": 1,\n                  \"boost\": 2.0\n                }\n              }\n            ]\n          }\n        }\n      ],\n      \"minimum_should_match\": 1\n    }\n  }\n}'",
    "Based on your query in English translation: \"Find articles about the advantages and disadvantages of using GPT-4 for evaluation metrics.\", here's an Elasticsearch search query that might help you. This query uses a less restrictive `bool` query with `should` clauses, which allows for matching records where any of the given search terms appear in the defined fields.\n\n```json\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"multi_match\": {\n            \"query\": \"GPT-4 evaluation metrics advantages disadvantages\",\n            \"fields\": [\"title^3\", \"abstract\"]\n          }\n        },\n        {\n          \"multi_match\": {\n            \"query\": \"article GPT-4 metrics assessment benefits drawbacks\",\n            \"fields\": [\"title^3\", \"abstract\"]\n          }\n        }\n      ],\n      \"minimum_should_match\": 1\n    }\n  },\n  \"_source\": [\"author\", \"date\", \"_id\", \"title\", \"abstract\"]\n}\n```\n\nThis query returns JSON results containing the 'author', 'date', '_id', 'title', and 'abstract' fields.",
    "Based on your query in English: \"Find papers where a multimodal intelligent agent was completed using GPT4v.\"\n\nThe ES search query could be:\n\n```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"multi_match\": {\n            \"query\": \"multimodal intelligent agent\",\n            \"fields\": [\"title^3\", \"abstract\"]\n          }\n        },\n        {\n          \"bool\": {\n            \"should\": [\n              {\n                \"term\": {\n                  \"author\": \"GPT4v\"\n                }\n              },\n              {\n                \"multi_match\": {\n                  \"query\": \"completed using GPT4v\",\n                  \"fields\": [\"abstract\"]\n                }\n              }\n            ],\n            \"minimum_should_match\": 1\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\nThis query uses a `multi_match` query to search for the phrases \"multimodal intelligent agent\" in the title and abstract fields with a boost of 3. The inner `bool` query with `should` clause searches for \"completed using GPT4v\" in the abstract field while also checking for \"author\" as \"GPT4v\". The query will have higher recall by being less restrictive on the fields and the phrase search.",
    "{\n\"query\": {\n\"bool\": {\n\"must\": [\n{\n\"multi_match\": {\n\"query\": \"using LLM for protein structure function property prediction\",\n\"fields\": [\"abstract\"]\n}\n},\n{\n\"bool\": {\n\"should\": [\n{\n\"multi_match\": {\n\"query\": \"LLM technique\",\n\"fields\": [\"abstract\"]\n}\n},\n{\n\"multi_match\": {\n\"query\": \"protein structure prediction\",\n\"fields\": [\"abstract\"]\n},\n{\n\"multi_match\": {\n\"query\": \"function prediction\",\n\"fields\": [\"abstract\"]\n},\n{\n\"multi_match\": {\n\"query\": \"property prediction\",\n\"fields\": [\"abstract\"]\n}\n],\n\"minimum_should_match\": 3\n}\n}\n]\n}\n}\n}\n}\n}",
    "{\n\"query\": {\n\"bool\": {\n\"must\": [\n{\n\"multi_match\": {\n\"query\": \"BERT RoBERTa multilingual sentiment analysis papers\",\n\"fields\": [\"title^3\", \"abstract^3\"]\n}\n},\n{\n\"range\": {\n\"date\": {\n\"gte\": \"2022-01-01\"\n}\n}\n],\n\"filter\": [\n{\n\"term\": {\n\"_source.language\": \"en\" // Assuming all documents are in English, adjust if necessary\n}\n}\n]\n}\n}\n}\n}\n\nThis query uses a `bool` query with `must` clause for the multi-match query on the 'title' and 'abstract' fields, a range filter on the 'date' field, and a filter to ensure documents are in English. The multi-match query is less restrictive as it searches for the terms in any order within the fields, and the search scope is expanded by searching in the 'title' and 'abstract' fields.",
    "{\n\n\"query\": {\n\"bool\": {\n\"must\": [\n{\n\"bool\": {\n\"should\": [\n{\n\"match\": {\n\"date\": {\n\"query\": \"2018\",\n\"type\": \"phrase_prefix\"\n}\n},\n{\n\"range\": {\n\"date\": {\n\"gte\": 2018\n}\n}\n}\n},\n{\n\"multi_match\": {\n\"query\": \"reinforcement learning machine translation\",\n\"fields\": [\"title^3\", \"abstract\"]\n}\n}\n]\n}\n}\n},\n\"size\": 10,\n\"_source\": [\"author\", \"title\", \"date\"]\n}\n}",
    "{\n\n\"query\": {\n\"bool\": {\n\"must\": [\n{\n\"multi\\_match\": {\n\"query\": \"Transformer model large scale dataset pretrain\",\n\"fields\": [\"title^2.0\", \"abstract\"]\n}\n},\n{\n\"filter\": {\n\"term\": {\n\"_source.fields\": [\"author\", \"date\", \"title\", \"abstract\"]\n}\n}\n}\n]\n}\n}\n}",
    "```json\n\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"multi_match\": {\n            \"query\": \"use reinforcement learning for code generation\",\n            \"fields\": [\"title^5\", \"abstract\"]\n          }\n        },\n        {\n          \"term\": {\n            \"fields\": [\"author.keywords\"],\n            \"value\": \"reinforcement learning, code generation\"\n          }\n        },\n        {\n          \"bool\": {\n            \"should\": [\n              { \"term\": { \"title\": \"reinforcement learning\" }},\n              { \"term\": { \"abstract\": \"reinforcement learning\" }}\n            ],\n            \"minimum_should_match\": 1,\n            \"boost\": 0.5\n          }\n        },\n        {\n          \"bool\": {\n            \"should\": [\n              { \"term\": { \"title\": \"code generation using reinforcement learning\" }},\n              { \"term\": { \"abstract\": \"code generation using reinforcement learning\" }}\n            ],\n            \"minimum_should_match\": 1,\n            \"boost\": 1.5\n          }\n        },\n      ]\n    }\n  }\n}\n\n```",
    "Based on your query in English, \"find papers about the safety of tools for using large models\", here's a less restrictive ES search query:\n\n```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        { \"match\": { \"title\": { \"query\": \"large models safety\", \"operator\": \"OR\" } } },\n        { \"match\": { \"abstract\": { \"query\": \"use of large models tool safety\", \"analyzer\": \"english\" } } },\n        { \"match\": { \"abstract\": { \"query\": \"tools for large model safety\", \"analyzer\": \"english\" } } },\n        { \"match\": { \"title\": { \"fielddata\": true, \"index\": \"_all\", \"query\": \"*large models*\" } } },\n        { \"match\": { \"title\": { \"fielddata\": true, \"index\": \"_all\", \"query\": \"*tools safety*\" } } }\n      ],\n      \"minimum_should_match\": 1\n    }\n  },\n  \"_source\": [\"author\", \"date\", \"title\"]\n}\n```\n\nThis search query is designed to be less restrictive by using the `bool` query with `must` clauses that match against the 'title' and 'abstract' fields. The `fielddata: true` setting for these fields allows for fuzzy matching, which may increase recall rate.",
    "Based on your query \"查找一下对使用 GPT 生成数据集的训练步骤进行改进的论文.\" (Find papers about improving training steps for generating datasets using GPT), here's an ES search query that translates to English and should increase recall:\n\n```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"abstract\": {\n              \"query\": \"improving training steps for gpt dataset generation\",\n              \"type\": \"phrase_prefix\"\n            }\n          }\n        },\n        {\n          \"bool\": {\n            \"should\": [\n              {\n                \"match\": {\n                  \"title\": {\n                    \"query\": \"improving training steps for gpt dataset generation\",\n                    \"type\": \"phrase_prefix\"\n                  }\n                }\n              },\n              {\n                \"match\": {\n                  \"author\": {\n                    \"query\": \"*improving gpt training steps*\",\n                    \"analyzer\": \"standard\"\n                  }\n                }\n              }\n            ],\n            \"minimum_should_match\": 1\n          }\n        }\n      ]\n    }\n  },\n  \"_source\": [\"title\", \"author\", \"date\"]\n}\n```",
    "Based on your user query in English, here's an ES search query to find documents with papers using CLIP for open vocabulary checking in their titles, abstracts or contents:\n\n```json\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"multi_match\": {\n            \"query\": \"using clip for open vocabulary checking\",\n            \"fields\": [\"title^3\", \"abstract\"]\n          }\n        },\n        {\n          \"bool\": {\n            \"must_not\": [\n              {\n                \"term\": {\n                  \"_source.title.normalized\": null\n                }\n              },\n              {\n                \"term\": {\n                  \"_source.abstract.normalized\": null\n                }\n              }\n            ],\n            \"should\": [\n              {\n                \"multi_match\": {\n                  \"query\": \"clip open vocabulary checking\",\n                  \"fields\": [\"title^3\", \"abstract\"]\n                }\n              },\n              {\n                \"multi_match\": {\n                  \"query\": \"open vocabulary checking clip\",\n                  \"fields\": [\"title.autosuggest ^5 title\", \"abstract.autosuggest ^5 abstract\"]\n                }\n              }\n            ]\n          }\n        }\n      ],\n      \"minimum_should_match\": 1\n    }\n  },\n  \"_source\": [\"author\", \"date\"],\n  \"_source.include_fields\": false,\n  \"_source.exclude_fields\": [\"_version\"]\n}\n```\n\nThis search query uses less restrictive techniques, such as the multi_match and bool queries, to expand the search scope and increase the recall rate of the search by matching terms in titles, abstracts or contained within synonym fields (autosuggest) with varying degrees of importance.",
    "Based on the given user query in Chinese, it can be translated into English as: \"Please find papers using techniques to boost target detection performance with self-pumped reflection.\"\n\nTo increase recall rate, less restrictive queries can be constructed by breaking down this query into simpler search terms. For instance:\n\n1. \"self-pumped reflection\" => [\"self-pumped reflection\", \"self-reflection pumping\"]\n2. \"using techniques\" => [\"utilize methods\", \"employ techniques\", \"approaches\", \"methods\"]\n3. \"boost target detection performance\" => [\"improve object detection\", \"enhance target recognition\", \"optimize performance for detection\"]\n\nTo construct the final search query:\n\n```json\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"multi_match\": {\n            \"query\": [\"self-pumped reflection\", \"self-reflection pumping\"],\n            \"fields\": [\"title^3\", \"abstract\"]\n          }\n        },\n        {\n          \"bool\": {\n            \"should\": [\n              {\n                \"multi_match\": {\n                  \"query\": [\"utilize methods\", \"employ techniques\", \"approaches\", \"methods\"],\n                  \"fields\": [\"title^3\", \"abstract\"]\n                }\n              },\n              {\n                \"bool\": {\n                  \"should\": [\n                    {\n                      \"multi_match\": {\n                        \"query\": [\"improve object detection\", \"enhance target recognition\"],\n                        \"fields\": [\"title^3\", \"abstract\"]\n                      }\n                    },\n                    {\n                      \"multi_match\": {\n                        \"query\": [\"optimize performance for detection\"],\n                        \"fields\": [\"title^3\", \"abstract\"]\n                      }\n                    }\n                  ],\n                  \"minimum_should_match\": 1,\n                  \"boost\": 2.0\n                }\n              }\n            ]\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\nThe above query searches for papers in the index containing fields 'author', 'date', 'title', and 'abstract' that have terms related to self-pumped reflection, using techniques, improving object detection, enhancing target recognition, or optimizing performance for detection. The query is designed to return more relevant results by using less restrictive queries with broader search scope and synonyms/related terms.",
    "```json\n\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"multi_match\": {\n            \"query\": \"find papers using CONLL 2004 dataset after 2020 for NER evaluation\",\n            \"fields\": [\"title^3\", \"abstract\"]\n          }\n        },\n        {\n          \"bool\": {\n            \"must\": [\n              {\n                \"term\": {\n                  \"date\": {\n                    \"value\": \"2020-01-01\",\n                    \"boost\": 1.5,\n                    \"minimum_should_match\": 1\n                  }\n                }\n              },\n              {\n                \"bool\": {\n                  \"must\": [\n                    {\n                      \"term\": {\n                        \"fields.ner._score\": {\n                          \"value\": \"NER\",\n                          \"boost\": 2.5\n                        }\n                      }\n                    },\n                    {\n                      \"term\": {\n                        \"fields.dataset._score\": {\n                          \"value\": \"CONLL 2004\"\n                        }\n                      }\n                    }\n                  ],\n                  \"minimum_should_match\": 1,\n                  \"boost\": 1.5\n                }\n              }\n            ]\n          }\n        }\n      ],\n      \"minimum_should_match\": 1\n    }\n  }\n}\n```\n\nThis query translates the user's Chinese query to English, \"find papers using CONLL 2004 dataset after 2020 for NER evaluation\", and searches in the 'title' and 'abstract' fields with a less restrictive query. The query also includes conditions on the date field ('date': \"2020-01-01\") and custom score fields ('fields.ner.\\_score' and 'fields.dataset.\\_score') to increase recall rate.",
    "```json\n\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        { \"multi_match\": { \"query\": \"find papers using CrossWoz or MultiWoz datasets for DST evaluation\", \"fields\": [\"title^3\", \"abstract\"] }}\n      ]\n    }\n  },\n  \"_source\": [\"author\", \"date\", \"title\"]\n}\n```",
    "Based on your user query, here is a possible Elasticsearch query in English:\n\n```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"2023\"\n            }\n          }\n        },\n        {\n          \"multi_match\": {\n            \"query\": \"hotpotqa dataset problem generation task\",\n            \"fields\": [\"title^3\", \"abstract\"]\n          }\n        }\n      ]\n    }\n  },\n  \"_source\": [\"author\", \"title\", \"abstract\"]\n}\n```\n\nThis query searches for documents that have a date greater than or equal to \"2023\" and whose title or abstract contain the phrase \"hotpotqa dataset problem generation task\". The `_source` field specifies which fields to include in the JSON result. Note that I assumed the date format was YYYY年MM月DD日 (i.e., \"year month day\") and used Elasticsearch's built-in date formatting functions accordingly. If your date format is different, adjust the range query accordingly.",
    "```json\n\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"multi_match\": {\n            \"query\": \"machine learning mental health diseases research\",\n            \"fields\": [\"title^3\", \"abstract^3\"]\n          }\n        },\n        {\n          \"filter\": {\n            \"term\": {\n              \"fields.technique\": [\"machine learning\"]\n            }\n          }\n        },\n        {\n          \"bool\": {\n            \"should\": [\n              {\n                \"term\": {\n                  \"fields.topic\": {\"value\": \"mental health\", \"boost\": 2}\n                }\n              },\n              {\n                \"term\": {\n                  \"fields.topic\": {\"value\": \"psychiatric diseases\", \"_ungappped_\": true}\n                }\n              },\n              {\n                \"bool\": {\n                  \"should\": [\n                    {\n                      \"multi_match\": {\n                        \"query\": \"research\",\n                        \"fields\": [\"title^3\", \"abstract^3\"]\n                      }\n                    },\n                    {\n                      \"multi_match\": {\n                        \"query\": \"paper\",\n                        \"fields\": [\"title^3\", \"abstract^3\"]\n                      }\n                    }\n                  ],\n                  \"minimum_should_match\": 1\n                }\n              }\n            ]\n          }\n        },\n        {\n          \"bool\": {\n            \"filter\": {\n              \"term\": {\n                \"fields.pubmedId\": {\"exists\": false}\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\nThis ES query will search for papers that mention 'machine learning' in the technique field, and contain terms related to mental health diseases research (e.g., mental health, psychiatric diseases, research, paper) in their title or abstract. It is less restrictive by using multi-match queries with term frequency boosting and allowing synonym expansions, expanding the search scope with should clauses and the use of \"should\" instead of \"must\", and not filtering out papers indexed from PubMed ID.",
    "```json\n\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"multi_match\": {\n            \"query\": \"deep learning in medical imaging analysis recent research\",\n            \"fields\": [\"title^3\", \"abstract\"]\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "Based on your query \"查找文献，基于优化实现模型实现过《越狱》技术\", I assume you are looking for papers about implementations of \"prison break\" optimizations using optimization models. Here's the corresponding ES search query:\n\n```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        { \"match\": { \"title\": { \"query\": \"prison break\", \"type\": \"phrase_prefix\" } }},\n        { \"bool\": {\n            \"should\": [\n              { \"multi_match\": { \"query\": \"optimization model\", \"fields\": [\"abstract\"] }}\n            ],\n            \"minimum_should_match\": 1,\n            \"boost\": 0.5\n          }},\n        { \"bool\": {\n            \"should\": [\n              { \"multi_match\": { \"query\": \"optimization implementation\", \"fields\": [\"title\", \"abstract\"] }}\n            ],\n            \"minimum_should_match\": 1,\n            \"boost\": 0.3\n          }},\n        { \"bool\": {\n            \"should\": [\n              { \"multi_match\": { \"query\": \"prison break technology\", \"fields\": [\"title\", \"abstract\"] }}\n            ],\n            \"minimum_should_match\": 1,\n            \"boost\": 0.2\n          }},\n        { \"bool\": {\n            \"should\": [\n              { \"multi_match\": { \"query\": \"model for prison break\", \"fields\": [\"abstract\"] }}\n            ],\n            \"minimum_should_match\": 1,\n            \"boost\": 0.1\n          }},\n        { \"bool\": {\n            \"should\": [\n              { \"multi_match\": { \"query\": \"implementation for prison break\", \"fields\": [\"title\", \"abstract\"] }}\n            ],\n            \"minimum_should_match\": 1,\n            \"boost\": 0.1\n          }},\n        { \"bool\": {\n            \"should\": [\n              { \"multi_match\": { \"query\": \"optimization prison break\", \"fields\": [\"title\", \"abstract\"] }}\n            ],\n            \"minimum_should_match\": 1,\n            \"boost\": 0.05\n          }},\n        { \"bool\": {\n            \"should\": [\n              { \"multi_match\": { \"query\": \"prison break optimization\", \"fields\": [\"title\", \"abstract\"] }}\n            ],\n            \"minimum_should_match\": 1,\n            \"boost\": 0.05\n          }},\n        { \"bool\": {\n            \"should\": [\n              { \"multi_match\": { \"query\": \"prison break in optimization\", \"fields\": [\"title\", \"abstract\"] }}\n            ],\n            \"minimum_should_match\": 1,\n            \"boost\": 0.03\n          }},\n        { \"bool\": {\n            \"should\": [\n              { \"multi_match\": { \"query\": \"prison break application in optimization\", \"fields\": [\"title\", \"abstract\"] }}\n            ],\n            \"minimum_should_match\": 1,\n            \"boost\": 0.03\n          }},\n        { \"bool\": {\n            \"should\": [\n              { \"multi_match\": { \"query\": \"optimization prison break solution\", \"fields\": [\"title\", \"abstract\"] }}\n            ],\n            \"minimum_should_match\": 1,\n            \"boost\": 0.02\n          }},\n        { \"bool\": {\n            \"should\": [\n              { \"multi_match\": { \"query\": \"prison break optimization techniques\", \"fields\": [\"title\", \"abstract\"] }}\n            ],\n            \"minimum_should_match\": 1,\n            \"boost\": 0.02\n          }},\n        { \"bool\": {\n            \"should\": [\n              { \"multi_match\": { \"query\": \"optimization prison break algorithm\", \"fields\": [\"title\", \"abstract\"] }}\n            ],\n            \"minimum_should_match\": 1,\n            \"boost\": 0.01\n          }},\n        { \"bool\": {\n            \"should\": [\n              { \"multi_match\": { \"query\": \"prison break optimization framework\", \"fields\": [\"title\", \"abstract\"] }}",
    "Based on your query, I assume you are looking for papers related to Reinforcement Learning in the field of Large Language Models. Here's an Elasticsearch search query in English that might help increase the recall rate:\n\n```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        { \"match\": { \"title\": { \"query\": \"Reinforcement Learning\", \"type\": \"phrase_prefix\" } } },\n        { \"match\": { \"abstract\": { \"query\": \"Large Language Model\", \"type\": \"phrase_prefix\" } } },\n        { \"match\": { \"fields\": [\"author\", \"date\", \"title\", \"abstract\"], \"query\": \"*strengthening learning*\" }}\n      ]\n    }\n  }\n}\n```\n\nThis query searches for documents where the title or abstract contains the phrase \"Reinforcement Learning\" and the word \"Large\" appears in any of the fields (author, date, title, abstract), along with the words \"Language Model\" or \"learning\" with a stemming wildcard (*).",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"multi_match\": {\n            \"query\": \"research on knowledge transfer for large models in new tasks\",\n            \"fields\": [\"abstract\"]\n          }\n        },\n        {\n          \"multi_match\": {\n            \"query\": \"study on large modelknowledge transfer new task\",\n            \"fields\": [\"title^3\", \"abstract\"]\n          }\n        }\n      ],\n      \"minimum_should_match\": 1\n    }\n  }\n}\n```",
    "Based on the given user query in English: \"research on large language models and humanities after 2023\", here's an ES search query with a less restrictive approach to increase recall:\n\n```json\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        { \"match\": { \"title\": \"大语言模型和人文学科交叉 research\" } },\n        { \"match\": { \"title\": \"large language models humanities interdisciplinary\" } },\n        { \"bool\": {\n            \"should\": [\n              { \"range\": { \"date\": { \"gte\": \"2023-01-01\" } } },\n              { \"match\": { \"abstract\": \"大语言模型 or large language models\" } },\n              { \"match\": { \"abstract\": \"人文学科 or humanities\" }, \"operator\": \"AND\" },\n              { \"match\": { \"abstract\": \"交叉 or interdisciplinary\" } }\n            ]\n          }}\n      ],\n      \"minimum_should_match\": 1\n    }\n  },\n  \"_source\": [\"author\", \"title\", \"date\"]\n}\n```\n\nThis search query uses a `bool` query to combine multiple conditions:\n\n1. Exact title match (\"大语言模型和人文学科交叉 research\" or \"large language models humanities interdisciplinary\") using the `match` query.\n2. A `range` query for documents with a date after 2023-01-01.\n3. Partial abstract matches for the terms \"大语言模型\" (大, 語言, 模型), \"large language models\", and the term \"人文学科\" (人文, 學科) or \"humanities\", as well as the term \"交叉\" or \"interdisciplinary\".\n4. Requires that all conditions (title match, date range, and abstract partial matches) must be met for a document to be considered a result.\n\nOutput the JSON result containing fields 'author', 'title', and 'date' only.",
    "```json\n\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"2023\"\n            }\n          }\n        },\n        {\n          \"multi_match\": {\n            \"query\": \"large language model neuroscience research\",\n            \"fields\": [\"title^3\", \"abstract\"]\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "```json\n\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"2022\"\n            }\n          }\n        },\n        {\n          \"multi_match\": {\n            \"query\": \"AI for Science\",\n            \"fields\": [\"title^3\", \"abstract\"]\n          }\n        }\n      ],\n      \"filter\": [\n        {\n          \"term\": {\n            \"subjectArea\": \"Computer Science\"\n          }\n        },\n        {\n          \"term\": {\n            \"documentType\": \"thesis\"\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "Based on your query in English, \"Find summaries about LLM-based Agents in 2023\", here's a possible ES search query using less restrictive queries and expanding the search scope:\n\n```json\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"multi_match\": {\n            \"query\": \"LLM-based Agents\",\n            \"fields\": [\"title^2\", \"abstract\"]\n          }\n        },\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"2023\"\n            }\n          }\n        },\n        {\n          \"multi_match\": {\n            \"query\": \"summaries\",\n            \"fields\": [\"abstract\"]\n          }\n        },\n        {\n          \"bool\": {\n            \"must_not\": [\n              {\n                \"term\": {\n                  \"title\": \"stop\\_word\"\n                }\n              },\n              {\n                \"term\": {\n                  \"abstract\": \"stop\\_word\"\n                }\n              }\n            ]\n          }\n        }\n      ],\n      \"minimum_should_match\": 1\n    }\n  },\n  \"_source\": [\"title\", \"date\", \"abstract\"],\n  \"_size\": 10\n}\n```\n\nThis search query uses the `multi_match` query with the `title` and `abstract` fields to match the keywords \"LLM-based Agents\" and expands the search scope by using a less restrictive boolean query, allowing some documents to be included if they don't have both the title and abstract containing these exact words. It also includes a range query to filter only records with a date greater or equal to 2023. The `must_not` query is used to exclude stop words from the results. Lastly, it sets the size of the result to 10 records.\n\nRemember that this search query may not be perfect and might require adjustments depending on your specific index schema and requirements.",
    "Based on your query \"对比解码综述\" which translates to \"Comparison Decoding Summary\" in English. Here is an ES search query that might help increase recall:\n\n```json\n{\n  \"query\": {\n    \"multi_match\": {\n      \"query\":    \"comparison decoding summary\",\n      \"fields\": [\"title^2\",\"abstract\"]\n    }\n  },\n  \"_source\": [\"author\", \"date\", \"title\"]\n}\n```\n\nThis query will search the title and abstract fields using a multi-match query. The '^2' prefix for the title field boosts its importance in the search result. Remember, this is just a suggestion to increase recall rate, as the actual results can vary based on your specific use case and data.",
    "```json\n\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"abstract\": {\n              \"query\": \"rlhf language model\",\n              \"type\": \"phrase_prefix\"\n            }\n          }\n        },\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"now-3m\"\n            }\n          }\n        }\n      ],\n      \"minimum_should_match\": 1\n    }\n  },\n  \"_source\": [\"title\", \"author\"]\n}\n```",
    "{\n\n\"query\": {\n\"bool\": {\n\"must\": [\n{\n\"multi_match\": {\n\"query\": \"large model inference tree search\",\n\"fields\": [\"title^3\", \"abstract\"]\n}\n},\n{\n\"multi_match\": {\n\"query\": \"techniques techniques less restrictive expand search scope recall rate\",\n\"fields\": [\"abstract\"]\n},\n\"analyzer\": \"english\"\n},\n{\n\"bool\": {\n\"should\": [\n{\n\"field\": \"title.keyword\"\n},\n{\n\"field\": \"abstract.keyword\"\n}\n],\n\"minimum_should_match\": 1,\n\"boost\": 0.5\n}\n},\n{\n\"multi_match\": {\n\"query\": \"combine tree search reasoning large model\",\n \"fields\": [\"title^3\", \"abstract\"]\n }\n},\n{\n \"bool\": {\n   \"should\": [\n     {\n       \"field\": \"author.keyword\"\n     },\n     {\n       \"field\": \"date.keyword\"\n     }\n   ],\n   \"minimum_should_match\": 1,\n   \"boost\": 0.5\n  },\n  \"boost\": 0.2\n}\n]\n}\n}\n}",
    "Based on the given user query in English, the following ElasticSearch query should be used:\n\n```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"2023\"\n            }\n          }\n        },\n        {\n          \"multi_match\": {\n            \"query\": \"through prompt experiential studies large language models behavior\",\n            \"fields\": [\"title^2\", \"abstract\"]\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\nThis query uses a `bool` query to combine the conditions for the results, including a range filter for documents with a date field greater than or equal to \"2023\" and a multi-match query with a low boost for searching in the title and abstract fields for the text \"through prompt experiential studies large language models behavior\". This approach should increase the recall rate by being less restrictive and expanding the search scope.",
    "```json\n\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        { \"multi_match\": { \"query\": \"multimodal models understand and generate unified modeling, end-to-end training\", \"fields\": [\"title^3\", \"abstract\"] }},\n        { \"multi_match\": { \"query\": \"多模态大模型理解和生成统一建model、端到端训练\", \"fields\": [\"title^3\", \"abstract\"], \"type\": \"phrase_prefix\" }}\n      ],\n      \"minimum_should_match\": 1\n    }\n  }\n}\n```",
    "```json\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"2020-01-01\",\n              \"lte\": \"2022-12-31\"\n            }\n          }\n        },\n        {\n          \"multi_match\": {\n            \"query\": \"language model reward modeling evaluation\",\n            \"fields\": [\n              \"title\",\n              \"abstract\"\n            ],\n            \"type\": \"boolean_phrase\"\n          }\n        }\n      ]\n    }\n  },\n  \"_source\": [\"author\"]\n}\n```",
    "```json\n\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"multi_match\": {\n            \"query\": \"improve model sequential modeling capability from positional encoding perspective\",\n            \"fields\": [\"abstract\"]\n          }\n        },\n        {\n          \"prefix\": {\n            \"title\": {\n              \"value\": \"改善\"\n            }\n          }\n        },\n        {\n          \"prefix\": {\n            \"title\": {\n              \"value\": \"从位置编码角度\",\n              \"boost\": 2.0\n            }\n          }\n        },\n        {\n          \"bool\": {\n            \"should\": [\n              {\n                \"wildcard\": {\n                  \"author\": \"*模论文.*\"\n                }\n              },\n              {\n                \"term\": {\n                  \"date.raw\": {\n                    \"value\": \"20*\",\n                    \"boost\": 1.5\n                  }\n                }\n              }\n            ],\n            \"minimum_should_match\": 1,\n            \"boost\": 1.3\n          }\n        }\n      ],\n      \"adjust_weights: false\n    }\n  },\n  \"_source\": [\"author\", \"date\", \"title\"]\n}\n```",
    "Based on your query, here's a possible ElasticSearch search query that translates to English and aims to increase recall:\n\n```json\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        { \"match\": { \"title\": { \"query\": \"using large models for math problem generation\", \"analyzer\": \"english\" } } },\n        { \"match\": { \"abstract\": { \"query\": \"using large models for math problem generation\", \"analyzer\": \"english\" } } },\n        { \"multi_match\": { \"query\": \"using large models for math problem generation\", \"fields\": [\"title^3\", \"abstract^2\"] }}\n      ]\n    }\n  }\n}\n```\n\nThis query uses a `bool` query to combine multiple search terms, with each term being matched against the `title` and `abstract` fields using a combination of `match` queries and `multi_match` queries. The English language analyzer is specified for each match query. This query aims to increase recall by searching less restrictively across fields and using term variations through the use of different query weights.",
    "```json\n\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"multi_match\": {\n            \"query\": \"validate model inference capabilities dataset papers\",\n            \"fields\": [\"title^3\", \"abstract^3\"]\n          }\n        },\n        {\n          \"prefix\": {\n            \"title\": {\n              \"value\": \"数据集\"\n            }\n          }\n        },\n        {\n          \"multi_match\": {\n            \"query\": \"model inference capabilities dataset papers\",\n            \"fields\": [\"abstract\"]\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "Based on your query in English: \"Help me find papers where large models were used for literary research\", here's the equivalent Elasticsearch search query:\n\n```json\n{\n  \"query\": {\n    \"multi_match\": {\n      \"query\": \"large models literature research\",\n      \"fields\": [\"title^3\", \"abstract\"]\n    }\n  }\n}\n```\n\nThis search query expands the search scope by using a `multi_match` query with a less restrictive query term and applying a higher boost factor to fields 'title' and 'abstract'.",
    "Based on the given user query in Chinese and assuming that the indexed documents are in English, here's a possible Elasticsearch search query to find the paper with the earliest mention of \"distributed word representation\":\n\n```json\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"multi_match\": {\n            \"query\": \"distributed word representation\",\n            \"fields\": [\"title^3\", \"abstract\"]\n          }\n        },\n        {\n          \"prefix\": {\n            \"title.raw\": {\n              \"value\": \"distributed word representation\"\n            }\n          }\n        },\n        {\n          \"bool\": {\n            \"must_not\": [\n              {\n                \"term\": {\n                  \"_source\": \"related_papers\"\n                }\n              }\n            ]\n          }\n        }\n      ],\n      \"minimum_should_match\": 1\n    }\n  },\n  \"sort\": [\n    {\n      \"date\": {\n        \"order\": \"desc\"\n      }\n    }\n  ],\n  \"_source\": [\"author\", \"title\", \"date\"]\n}\n```\n\nThis query uses a `bool` query with multiple clauses (`should`) to search for documents that contain the exact phrase \"distributed word representation\" in their title or abstract fields, as well as those whose title begins with this phrase. The `minimum_should_match` parameter is set to 1 to ensure at least one of these clauses matches a document.\n\nThe query also includes a `prefix` query for documents that have a title field containing the exact phrase \"distributed word representation\", as well as a `sort` clause to return results sorted by their date in descending order, and a `_source` clause to include only the author, title, and date fields in the output.\n\nAdditionally, there's a `must_not` query inside a `bool` query within one of the `should` clauses, which is used to exclude documents with a \"related\\_papers\" field (presumably an array or list), as specified by the user query. This assumption is based on the use of the term \"这篇文章的相关文献\" in the original Chinese query, which roughly translates to \"related papers of this article\".\n\nKeep in mind that adjustments may be necessary depending on the specific data schema, field types, and search requirements.",
    "Based on your query, \"find me the NIPS 2023 paper list,\" here is a less restrictive ES search query that may increase recall:\n\n```json\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        { \"match\": { \"title\": \"nips 2023\" } },\n        { \"match\": { \"abstract\": \"nips 2023\" } },\n        { \"term\": { \"date\": \"2023\" } },\n        { \"terms\": { \"author.keyword\": [\"nips\"] } },\n        { \"multi_match\": { \"query\": \"nips 2023\", \"fields\": [\"title^2.5\", \"abstract\"] } }\n      ],\n      \"minimum_should_match\": 1\n    }\n  },\n  \"_source\": [\"title\", \"date\"],\n  \"_size\": 1000\n}\n```\n\nThis query searches for the terms 'nips' and '2023' in titles, abstracts, or dates. The `multi_match` term with a higher boost weight (^2.5) is added to increase recall for documents with 'nips 2023' in both title and abstract fields. This query returns up to 1000 JSON records containing the document's title and date fields.",
    "Based on the provided user query in English translation: \"Please list out papers published in industry within the past year that discuss the implementation of search advertising, SEO, or SEM practices\", here's a possible Elasticsearch search query using the given index fields:\n\n```json\n{\n  \"size\": 10,\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"2021-01-01\",\n              \"format\": \"yyyy-MM-dd\"\n            }\n          }\n        },\n        {\n          \"bool\": {\n            \"should\": [\n              {\n                \"multi_match\": {\n                  \"query\": \"search advertising\",\n                  \"fields\": [\"title^3\", \"abstract^3\"]\n                }\n              },\n              {\n                \"multi_match\": {\n                  \"query\": \"SEM\",\n                  \"fields\": [\"title^2\", \"abstract^2\"]\n                }\n              },\n              {\n                \"multi_match\": {\n                  \"query\": \"SEO\",\n                  \"fields\": [\"title^2\", \"abstract^2\"]\n                }\n              },\n              {\n                \"bool\": {\n                  \"must\": [\n                    {\n                      \"terms\": {\n                        \"author.keyword\": [\"AuthorName1\", \"AuthorName2\"] // replace with specific author names if available\n                      }\n                    }\n                  ],\n                  \"minimum_should_match\": 1\n                }\n              }\n            ]\n          }\n        }\n      ]\n    }\n  },\n  \"_source\": [\"author\", \"title\", \"abstract\"] // adjust to your specific requirements\n}\n```\n\nNote that this query is just a suggestion, and you should adjust it according to the specific use case and available index data. For example, if you have more detailed author information (like last names), replace 'AuthorName1' and 'AuthorName2' in the 'author.keyword' terms with actual author names. Adjusting the field weights (^3, ^2) can also be useful for improving recall rate.",
    "Based on your query \"闭源大模型用户数据隐私保护研究\" which translates to \"Privacy Protection of User Data in Large-scale Closed-source Models\" in English, here is an ES search query that may help increase the recall rate while respecting the given index fields:\n\n```json\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"multi_match\": {\n            \"query\": \"closed source model user data privacy protection\",\n            \"fields\": [\"title^3\", \"abstract\"]\n          }\n        },\n        {\n          \"wonky_phrase\": {\n            \"field\": \"title\",\n            \"query\": [\n              \"大模型用户数据隐私保护\",\n              \"closed source model user data privacy\",\n              \"privacy protection for large scale model user data\"\n            ]\n          }\n        },\n        {\n          \"wonky_phrase\": {\n            \"field\": \"abstract\",\n            \"query\": [\n              \"大模型用户数据隐私保护研究\",\n              \"Privacy Protection of User Data in Large-scale Closed-source Models\"\n            ]\n          }\n        },\n        {\n          \"wildcard\": {\n            \"field\": \"title.keyword\",\n            \"value\": \"*大模型用户数据隐私保护*\"\n          }\n        },\n        {\n          \"wildcard\": {\n            \"field\": \"abstract.keyword\",\n            \"value\": \"*Privacy Protection of User Data in Large-scale Closed-source Models*\"\n          }\n        }\n      ],\n      \"minimum_should_match\": 1\n    }\n  },\n  \"_source\": [\"author\", \"date\"]\n}\n```\n\nThis search query uses a `bool` query with a combination of techniques including `multi_match`, `wonky_phrase`, and wildcard queries. The goal is to capture as many relevant documents as possible while respecting the given index fields. However, note that the performance of this query may depend on the size and complexity of the data in your Elasticsearch index.",
    "Based on your query in English: \"Recommend 10 papers similar to AutoGPT\", here's an Elasticsearch search query that should increase recall rate:\n```json\n{\n  \"query\": {\n    \"function_score\": {\n      \"query\": {\n        \"bool\": {\n          \"must\": [\n            {\n              \"match\": {\n                \"title\": {\n                  \"query\": \"AutoGPT\",\n                  \"type\": \"phrase_prefix\"\n                }\n              }\n            },\n            {\n              \"term\": {\n                \"author.keyword\": \"NLP\" // Add this condition if the authors are known to specialize in Natural Language Processing\n              }\n            }\n          ],\n          \"should\": [\n            {\n              \"multi_match\": {\n                \"query\": \"AutoGPT\",\n                \"fields\": [\"title^3\", \"abstract^2\"]\n              }\n            },\n            {\n              \"wildcard\": {\n                \"title\": \"*AutoGPT*\"\n              }\n            }\n          ]\n        }\n      },\n      \"functions\": [\n        {\n          \"field_value_factor\": {\n            \"field\": \"date.keyword\" // Use this condition if the older papers are more likely to be relevant\n          }\n        }\n      ],\n      \"score_mode\": \"sum\"\n    }\n  },\n  \"_source\": [\"author\", \"title\", \"abstract\"],\n  \"size\": 10\n}\n```\nThis Elasticsearch query aims to find papers with the term 'AutoGPT' in their titles or abstracts, while being lenient and allowing for partial matches. It also increases the weight of older documents. The search is limited to returning a maximum of ten records containing the fields 'author', 'title', and 'abstract'.",
    "```json\n\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"now-1y\"\n            }\n          }\n        },\n        {\n          \"multi_match\": {\n            \"query\": \"多模态大模型industry application\",\n            \"fields\": [\"title^2\", \"abstract\"]\n          }\n        }\n      ]\n    }\n  }\n}\n```",
    "{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"multi\\_match\": {\n            \"query\": \"depth learning medical imaging analysis\",\n            \"fields\": [\"title^5\", \"abstract\"]\n          }\n        },\n        {\n          \"range\": {\n            \"date\": {\n              \"gte\": \"2019-01-01\"\n            }\n          }\n        }\n      ],\n      \"filter\": [\n        {\n          \"bool\": {\n            \"must\": [\n              {\n                \"multi\\_match\": {\n                  \"query\": \"auto annotation transfer learning methods\",\n                  \"fields\": [\"abstract\"]\n                }\n              },\n              {\n                \"term\": {\n                  \"author.field\": {\n                    \"value\": \"*\" // This will match all documents, expanding the search scope to increase recall rate\n                  }\n                }\n              }\n            ]\n          }\n        }\n      ]\n    }\n  }\n}",
    "{\n\n\"query\": {\n\"bool\": {\n\"must\": [\n{\n\"range\": {\n\"date\": {\n\"gte\": \"now-1y\",\n\"format\": \"YYYY-MM-dd||epoch_as_int\"\n}\n}\n},\n{\n\"bool\": {\n\"should\": [\n{\n\"multi_match\": {\n\"query\": \"natural language processing, Transformer model, large scale dataset, pre-training\",\n\"fields\": [\"title^3\", \"abstract\"]\n}\n},\n{\n\"multi_match\": {\n\"query\": \"natural language processing, Transformer model, large dataset, pre-trained\",\n\"fields\": [\"title^3\", \"abstract\"]\n}\n},\n{\n\"multi_match\": {\n\"query\": \"NLP, Transformer, big data, pretrain\",\n\"fields\": [\"title^3\", \"abstract\"]\n}\n}\n}\n},\n{\n\"bool\": {\n\"must\": [\n{\n\"field\": {\n\"field\": \"author.keyword\",\n\"term\": \"*.Transformer*\"\n}\n},\n{\n\"bool\": {\n\"should\": [\n{\n\"field\": {\n\"field\": \"performance.keyword\",\n \"term\": \"{ \\\"script\\\": {\\\"inline\": \"\\\"ge 1.0\\\"}}\" }\n},\n{\n\"field\": {\n\"field\": \"structure.keyword\",\n \"term\": \"{ \\\"script\\\": {\\\"inline\": \"\\\"exists\\\"}}\" }\n}\n}\n}\n}\n],\n\"minimum_should_match\": 1\n}\n}\n}\n}\n}\n}\n\nThis ES query will return documents that have been published in the last year with the terms \"natural language processing\", \"Transformer model\", \"large scale dataset\", or \"pre-training\" in their title or abstract, and where the author contains the term \"Transformer\". It also searches for documents where the fields \"performance\" and \"structure\" exist.",
    "{\n\"query\": {\n\"bool\": {\n\"must\": [\n{ \"multi_match\": { \"query\": \"intelligent entities research progress\", \"fields\": [\"title^3\", \"abstract^3\"] }},\n { \"bool\": {\n \"should\": [\n { \"multi_match\": { \"query\": \"summary or investigative papers\", \"fields\": [\"title^3\", \"abstract^3\"] }},\n { \"multi_match\": { \"query\": \"research progress intelligent entities\", \"fields\": [\"abstract^3\"] }}\n ],\n \"minimum_should_match\": 1\n }}\n],\n \"must_not\": [],\n \"filter\": []\n}\n}\n}"
]